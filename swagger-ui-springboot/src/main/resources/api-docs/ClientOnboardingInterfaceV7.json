{
  "swagger" : "2.0",
  "info" : {
    "description" : "Client Onboarding Interface V2",
    "version" : "7.0.0",
    "title" : "Client Onboarding Interface",
    "contact" : {
      "name" : "middleware-communication@finnova.ch",
      "email" : "middleware-communication@finnova.ch"
    }
  },
  "host" : "0.0.0.0:55025",
  "tags" : [ {
    "name" : "api/v6/banks/{number}",
    "description" : "Defines banks"
  }, {
    "name" : "api/v7/banks/{number}",
    "description" : "Defines banks"
  } ],
  "schemes" : [ "http" ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths" : {
    "/api/v6/banks/{number}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "405" : {
            "description" : "Method not allowed"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route1"
      }
    },
    "/api/v6/banks/{number}/clients" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Checks whether there is already a client with the same values in the database.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "firstName",
          "in" : "query",
          "description" : "First name of the client or company name in the case of a company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "Last name of the client",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstNamePartner",
          "in" : "query",
          "description" : "First name of the client's partner",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastNamePartner",
          "in" : "query",
          "description" : "Last name of the client's partner",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateOfBirthPartner",
          "in" : "query",
          "description" : "Date of birth of the client's partner",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateOfBirth",
          "in" : "query",
          "description" : "Date of birth of the client",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/possibleDuplicates"
              }
            }
          },
          "403" : {
            "description" : "No query parameter provided (at least one is required)"
          },
          "404" : {
            "description" : "Error during checking for duplicates in the backend"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route4"
      },
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Reserves a new client identification in Finnova without opening a client. The client ID obtained needs to be used again during the client opening.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CustomerIdentification"
            }
          },
          "404" : {
            "description" : "Error when retrieving new client identification"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route5"
      }
    },
    "/api/v6/banks/{number}/clients/{id}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Delivers the AMLO information for a particular client.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Technical client ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/amloDecisionResponse"
            }
          },
          "404" : {
            "description" : "Error when retrieving AMLO information for a client"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route6"
      },
      "put" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Adds a new client to Finnova.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Here, either the technical client ID obtained from POST call from resource '/api/v6/banks/{number}/clients', or a UUID generated on the client side can be used",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Client data that must be added to Finnova",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/client"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Client opened successfully",
            "schema" : {
              "$ref" : "#/definitions/clientResponse"
            }
          },
          "201" : {
            "description" : "Client already opened",
            "schema" : {
              "$ref" : "#/definitions/clientResponse"
            }
          },
          "400" : {
            "description" : "Error when adding a new client in the back-end application"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route2"
      }
    },
    "/api/v6/banks/{number}/clients/{id}/accounts" : {
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Reserves a new account number in Finnova without opening an account.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Technical client ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Required account opening data.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/accountReservationQuery"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/accountReservationResponse"
            }
          },
          "404" : {
            "description" : "Error when retrieving new account number"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route7"
      }
    },
    "/api/v6/banks/{number}/clients/{id}/accounts/{acId}/cards/{uuid}" : {
      "put" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Adds a new card for a new client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Technical client ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "acId",
          "in" : "path",
          "description" : "Technical account ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Personal, account and card data regarding the identified client in the resource.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Card"
          }
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "created",
            "schema" : {
              "$ref" : "#/definitions/CardResponse"
            }
          },
          "400" : {
            "description" : "Error when entering or allocating a new card."
          },
          "412" : {
            "description" : "Power of attorney for account missing or no more valid."
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route14"
      }
    },
    "/api/v6/banks/{number}/clients/{id}/accounts/{uuid}" : {
      "put" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Adds a new account to a new client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Technical client ID (KD_LNR)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "Here, either the technical account ID obtained from POST call from resource '/banks/{number}/clients/{id}/accounts', or a UUID generated on the client side can be used.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Personal data and account data regarding the identified client in the resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/account"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Account successfully opened",
            "schema" : {
              "$ref" : "#/definitions/accountResponseSuccess"
            }
          },
          "400" : {
            "description" : "Error when opening a new account"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route9"
      }
    },
    "/api/v6/banks/{number}/clients/{id}/cdb/{uuid}" : {
      "put" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Adds a new CDB entry for an existing client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Technical client ID (KD_LNR) of the client for which the CDB entry should be made.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "A UUID generated on the client side that unambiguously identifies the CDB resource",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "CDB data which needs to be entered under the selected client.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/cdbRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "CDB entry successfully created",
            "schema" : {
              "$ref" : "#/definitions/clientResponse"
            }
          },
          "200" : {
            "description" : "CDB entry already created",
            "schema" : {
              "$ref" : "#/definitions/clientResponse"
            }
          },
          "400" : {
            "description" : "Error creating the CDB entry"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route13"
      }
    },
    "/api/v6/banks/{number}/clients/{id}/contracts/{uuid}" : {
      "put" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Adds a new contract for a new client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Technical client ID (KD_LNR)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "A UUID generated on the client side that unambiguously identifies the contract resource",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Personal, account and contract data regarding the identified client in the resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/contract"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Contract successfully created and allocated.",
            "schema" : {
              "$ref" : "#/definitions/contractResponseSuccess"
            }
          },
          "200" : {
            "description" : "Contract already created and allocated.",
            "schema" : {
              "$ref" : "#/definitions/contractResponseSuccess"
            }
          },
          "400" : {
            "description" : "Error when entering or allocating a new account."
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route11"
      }
    },
    "/api/v6/banks/{number}/clients/{id}/notes/{uuid}" : {
      "put" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Adds a new client note for an existing client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Technical client ID)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "A UUID generated on the client side that unambiguously identifies the note resource",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Note data that needs to be entered for the selected client.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/note"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Note successfully created",
            "schema" : {
              "$ref" : "#/definitions/noteResponse"
            }
          },
          "200" : {
            "description" : "Note already created",
            "schema" : {
              "$ref" : "#/definitions/noteResponse"
            }
          },
          "400" : {
            "description" : "Error when creating the note"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route10"
      }
    },
    "/api/v6/banks/{number}/clients/{id}/pendingTasks/{uuid}" : {
      "put" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Adds a new pending client task for an existing client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Technical client ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "A UUID generated on the client side that unambiguously identifies the pending task resource",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Pending task data that needs to be entered for the selected client.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/pendingTask"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Pending task successfully created.",
            "schema" : {
              "$ref" : "#/definitions/PendingTaskResponse"
            }
          },
          "200" : {
            "description" : "Pending task already created.",
            "schema" : {
              "$ref" : "#/definitions/PendingTaskResponse"
            }
          },
          "400" : {
            "description" : "Request is not valid"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route8"
      }
    },
    "/api/v6/banks/{number}/clients/{id}/powersOfAttorney/{uuid}" : {
      "put" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Adds a new power of attorney agreement for a new client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Client ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "A UUID generated on the client side that unambiguously identifies the power of attorney resource.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Personal, account and contract data regarding the identified client in the resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/powerOfAttorney"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Power of attorney successfully created.",
            "schema" : {
              "$ref" : "#/definitions/powerOfAttorneyResponseSuccess"
            }
          },
          "200" : {
            "description" : "Power of attorney already created.",
            "schema" : {
              "$ref" : "#/definitions/powerOfAttorneyResponseSuccess"
            }
          },
          "400" : {
            "description" : "Error when creating new power of attorney"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route12"
      }
    },
    "/api/v6/banks/{number}/clients/{id}/relationships/{uuid}" : {
      "put" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Adds a new client relationship to an existing client. The client identified according to the client identification in the path is the person for which the new relationship is created. The type of relationship is defined using the client relationship code (e.g. contact person). A request with the same two technical client numbers (ID and relationshipClientID) and the same relationship number (number) is interpreted as the same message and executed only once.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Technical client ID (KD_LNR)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "description" : "A UUID generated on the client side that unambiguously identifies the relationship resource",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Personal data regarding the identified client in the resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClientRelationshipRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Relationship successfully created",
            "schema" : {
              "$ref" : "#/definitions/relationshipResponseSuccess"
            }
          },
          "200" : {
            "description" : "Relationship already created",
            "schema" : {
              "$ref" : "#/definitions/noteResponse"
            }
          },
          "400" : {
            "description" : "Error when adding new relation"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route3"
      }
    },
    "/api/v6/banks/{number}/amloDecision" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v6/banks/{number}" ],
        "summary" : "Returns the risk category based on the delivered input attributes.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "riskReduction",
          "in" : "query",
          "description" : "Code of the risk reduction",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "pepSystem",
          "in" : "query",
          "description" : "Automatically generated code for politically exposed persons",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "riskIncrease",
          "in" : "query",
          "description" : "Code of the risk increase",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "clientMainType",
          "in" : "query",
          "description" : "Client main type code according to KD_STAMM.KD_HTYP_CD",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "clientCategory",
          "in" : "query",
          "description" : "Client category code",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "pepManual",
          "in" : "query",
          "description" : "Manually generated code for politically exposed persons",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "countryOfDomicile",
          "in" : "query",
          "description" : "ISO_3166-1 - Country code of the country of domicile",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "financialIntermediary",
          "in" : "query",
          "description" : "Yes / No code showing whether or not the client is a financial intermediary",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "nationality",
          "in" : "query",
          "description" : "ISO_3166-1 - Country code of the leading client's nationality",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "furtherRisks",
          "in" : "query",
          "description" : "Code showing whether there are further risk criteria",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pepManual2ndPerson",
          "in" : "query",
          "description" : "Manually generated code for another politically exposed person with a relationship to the client",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nationality2ndPerson",
          "in" : "query",
          "description" : "ISO_3166-1 - Country code of the referenced client's nationality",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "countryOfDomicileControllingCompany",
          "in" : "query",
          "description" : "Code of the controlling company's country of domicile. This is loaded if the client is controlled by a foreign company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "domiciliaryCompany",
          "in" : "query",
          "description" : "Code for a domiciliary company (company that does not do business in the country of domicile)",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "cdbIdentification",
          "in" : "query",
          "description" : "CDB check type code of the client",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "legalStatus",
          "in" : "query",
          "description" : "Code of the company's legal status",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "noga",
          "in" : "query",
          "description" : "Sector / NOGA code ((Nomenclature Generale des Activites economiques: General Classification of Economic Activities) according to version 2008)",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/amloRiskCategory"
            }
          },
          "400" : {
            "description" : "Error determining the AMLO risk category"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route15"
      }
    },
    "/api/v7/banks/{number}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "405" : {
            "description" : "Method not allowed"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route17"
      }
    },
    "/api/v7/banks/{number}/clientIdentifications" : {
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Reserves a new client key (technical sequence number) with corresponding reserved client number in Finnova without opening a client. The client key/number obtained will be used for the actual client opening.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/v2.CustomerIdentification"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "404" : {
            "description" : "Error when retrieving new client identification"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route22"
      }
    },
    "/api/v7/banks/{number}/clients" : {
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Adds a new client to Finnova.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "Client generated uuid used to enforce idempotence",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Client data that must be added to Finnova",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/v2.client"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Client entry was already successfully created (duplicate request)",
            "schema" : {
              "$ref" : "#/definitions/v2.clientResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "201" : {
            "description" : "Client entry was successfully created",
            "schema" : {
              "$ref" : "#/definitions/v2.clientResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "400" : {
            "description" : "Error when adding a new client"
          },
          "412" : {
            "description" : "Invalid header field Request-ID"
          },
          "428" : {
            "description" : "Missing header field Request-ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route18"
      }
    },
    "/api/v7/banks/{number}/clients/{key}" : {
      "put" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Adds a new client to Finnova.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "Client generated uuid used to enforce idempotence",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "The technical client sequence number obtained from POST call to resource '/api/v7/banks/{number}/clientIdentifications'",
          "required" : true,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Client data that must be added to Finnova",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/v2.client"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Client entry was already successfully created (duplicate request)",
            "schema" : {
              "$ref" : "#/definitions/v2.clientResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "201" : {
            "description" : "Client entry was successfully created",
            "schema" : {
              "$ref" : "#/definitions/v2.clientResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "400" : {
            "description" : "Error when adding a new client"
          },
          "412" : {
            "description" : "Invalid header field Request-ID"
          },
          "428" : {
            "description" : "Missing header field Request-ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route19"
      }
    },
    "/api/v7/banks/{number}/clients/{key}/accountIdentifications" : {
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Reserves a new account number in Finnova without opening an account.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova user bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Technical client sequence number of the client",
          "required" : true,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Required account opening data.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/v2.accountReservationQuery"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/v2.accountReservationResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "404" : {
            "description" : "Error when retrieving new account number"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route24"
      }
    },
    "/api/v7/banks/{number}/clients/{key}/accounts" : {
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Adds a new account for a client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "Client generated uuid used to enforce idempotence",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Technical sequence number of client",
          "required" : true,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Personal data and account data regarding the identified client in the resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/v2.account"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Account successfully opened (duplicate request)",
            "schema" : {
              "$ref" : "#/definitions/v2.accountResponseSuccess"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "201" : {
            "description" : "Account successfully opened",
            "schema" : {
              "$ref" : "#/definitions/v2.accountResponseSuccess"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "400" : {
            "description" : "Error when opening a new account"
          },
          "412" : {
            "description" : "Invalid header field Request-ID"
          },
          "428" : {
            "description" : "Missing header field Request-ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route26"
      }
    },
    "/api/v7/banks/{number}/clients/{key}/accounts/{accountKey}" : {
      "put" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Adds a new account with prior account key/number reservation to a client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "Client generated uuid used to enforce idempotence",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova user bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Technical sequence number of client",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "accountKey",
          "in" : "path",
          "description" : "Technical account sequence number which has been obtained through a POST call of the resource '/banks/{number}/clients/{key}/accountIdentifications'.",
          "required" : true,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Personal data and account data regarding the identified client in the resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/v2.account"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Account successfully opened (duplicate request)",
            "schema" : {
              "$ref" : "#/definitions/v2.accountResponseSuccess"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "201" : {
            "description" : "Account successfully opened",
            "schema" : {
              "$ref" : "#/definitions/v2.accountResponseSuccess"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "400" : {
            "description" : "Error when opening a new account"
          },
          "412" : {
            "description" : "Invalid header field Request-ID"
          },
          "428" : {
            "description" : "Missing header field Request-ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route27"
      }
    },
    "/api/v7/banks/{number}/clients/{key}/accounts/{accountKey}/cards" : {
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Adds a new card for a new client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "Client generated uuid used to enforce idempotence",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova user bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Technical client sequence number of the client",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "accountKey",
          "in" : "path",
          "description" : "Technical account sequence number.",
          "required" : true,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Personal, account and card data regarding the identified client in the resource.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/v2.Card"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Card successfully opened (duplicate request)",
            "schema" : {
              "$ref" : "#/definitions/v2.CardResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "201" : {
            "description" : "Card successfully opened",
            "schema" : {
              "$ref" : "#/definitions/v2.CardResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "400" : {
            "description" : "Error when opening a new card"
          },
          "412" : {
            "description" : "Invalid header field Request-ID"
          },
          "428" : {
            "description" : "Missing header field Request-ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route32"
      }
    },
    "/api/v7/banks/{number}/clients/{key}/amloInfo" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Delivers the AMLO information for a particular client.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Technical client sequence number",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/v2.amloDecisionResponse"
            }
          },
          "404" : {
            "description" : "Error when retrieving AMLO information for a client"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route23"
      }
    },
    "/api/v7/banks/{number}/clients/{key}/cdb" : {
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Adds a new CDB entry for an existing client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "Client generated uuid used to enforce idempotence",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova user bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Technical client sequence number of the client for which the CDB entry should be made.",
          "required" : true,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "CDB data which needs to be entered for the selected client.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/v2.cdbRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CDB entry successfully created (duplicate request)",
            "schema" : {
              "$ref" : "#/definitions/v2.cdbResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "201" : {
            "description" : "CDB entry successfully created",
            "schema" : {
              "$ref" : "#/definitions/v2.cdbResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "400" : {
            "description" : "Error when creating a new CDB entry"
          },
          "412" : {
            "description" : "Invalid header field Request-ID"
          },
          "428" : {
            "description" : "Missing header field Request-ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route31"
      }
    },
    "/api/v7/banks/{number}/clients/{key}/contracts" : {
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Adds a new contract for a new client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "Client generated uuid used to enforce idempotence",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova user bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Technical client sequence number of the client",
          "required" : true,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Personal, account and contract data regarding the identified client in the resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/v2.contract"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Contract successfully created and allocated (duplicate request)",
            "schema" : {
              "$ref" : "#/definitions/v2.contractResponseSuccess"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "201" : {
            "description" : "Contract successfully created and allocated",
            "schema" : {
              "$ref" : "#/definitions/v2.contractResponseSuccess"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "400" : {
            "description" : "Error when opening a new contract"
          },
          "412" : {
            "description" : "Invalid header field Request-ID"
          },
          "428" : {
            "description" : "Missing header field Request-ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route29"
      }
    },
    "/api/v7/banks/{number}/clients/{key}/notes" : {
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Adds a new client note for an existing client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "Client generated uuid used to enforce idempotence",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Technical client sequence number)",
          "required" : true,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Note data that needs to be entered for the selected client.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/v2.note"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Note successfully created (duplicate request)",
            "schema" : {
              "$ref" : "#/definitions/v2.noteResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "201" : {
            "description" : "Note successfully created",
            "schema" : {
              "$ref" : "#/definitions/v2.noteResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "400" : {
            "description" : "Error when creating a new client note"
          },
          "412" : {
            "description" : "Invalid header field Request-ID"
          },
          "428" : {
            "description" : "Missing header field Request-ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route28"
      }
    },
    "/api/v7/banks/{number}/clients/{key}/pendingTasks" : {
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Adds a new pending client task for an existing client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "Client generated uuid used to enforce idempotence",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Technical client sequence number",
          "required" : true,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Pending task data that needs to be entered for the selected client.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/v2.pendingTask"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Pending task successfully created (duplicate request)",
            "schema" : {
              "$ref" : "#/definitions/v2.PendingTaskResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "201" : {
            "description" : "Pending task successfully created",
            "schema" : {
              "$ref" : "#/definitions/v2.PendingTaskResponse"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "400" : {
            "description" : "Error when creating a new pending task"
          },
          "412" : {
            "description" : "Invalid header field Request-ID"
          },
          "428" : {
            "description" : "Missing header field Request-ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route25"
      }
    },
    "/api/v7/banks/{number}/clients/{key}/powersOfAttorney" : {
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Adds a new power of attorney agreement for a new client.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "Client generated uuid used to enforce idempotence",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Client ID",
          "required" : true,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Personal, account and contract data regarding the identified client in the resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/v2.powerOfAttorney"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Power of attorney successfully created (duplicate request)",
            "schema" : {
              "$ref" : "#/definitions/v2.powerOfAttorneyResponseSuccess"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "201" : {
            "description" : "Power of attorney successfully created",
            "schema" : {
              "$ref" : "#/definitions/v2.powerOfAttorneyResponseSuccess"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "400" : {
            "description" : "Error when creating a new client relationship"
          },
          "412" : {
            "description" : "Invalid header field Request-ID"
          },
          "428" : {
            "description" : "Missing header field Request-ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route30"
      }
    },
    "/api/v7/banks/{number}/clients/{key}/relationships" : {
      "post" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Adds a new client relationship to an existing client. The client identified according to the client identification in the path is the person for which the new relationship is created. The type of relationship is defined using the client relationship code (e.g. contact person). A request with the same two technical client numbers (ID and relationshipClientID) and the same relationship number (number) is interpreted as the same message and executed only once.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Request-ID",
          "in" : "header",
          "description" : "Client generated uuid used to enforce idempotence",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova USERBK_NR",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "key",
          "in" : "path",
          "description" : "Technical client ID (KD_LNR)",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Personal data regarding the identified client in the resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/v2.ClientRelationshipRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Relationship successfully created (duplicate request)",
            "schema" : {
              "$ref" : "#/definitions/v2.relationshipResponseSuccess"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "201" : {
            "description" : "Relationship successfully created",
            "schema" : {
              "$ref" : "#/definitions/v2.relationshipResponseSuccess"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "URI of the created resource",
                "enum" : [ "" ]
              }
            }
          },
          "400" : {
            "description" : "Error when creating a new client relationship"
          },
          "412" : {
            "description" : "Invalid header field Request-ID"
          },
          "428" : {
            "description" : "Missing header field Request-ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route20"
      }
    },
    "/api/v7/banks/{number}/codes" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTablesResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table list for the given tenant"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route33"
      }
    },
    "/api/v7/banks/{number}/codes/AcademicTitles" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route34"
      }
    },
    "/api/v7/banks/{number}/codes/AcademicTitles/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route35"
      }
    },
    "/api/v7/banks/{number}/codes/AccountAuthorisationTypes" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route36"
      }
    },
    "/api/v7/banks/{number}/codes/AccountAuthorisationTypes/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route37"
      }
    },
    "/api/v7/banks/{number}/codes/AccountCategories" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route38"
      }
    },
    "/api/v7/banks/{number}/codes/AccountCategories/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route39"
      }
    },
    "/api/v7/banks/{number}/codes/AddressTypes" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route40"
      }
    },
    "/api/v7/banks/{number}/codes/AddressTypes/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route41"
      }
    },
    "/api/v7/banks/{number}/codes/AdvisorRoles" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route42"
      }
    },
    "/api/v7/banks/{number}/codes/AdvisorRoles/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route43"
      }
    },
    "/api/v7/banks/{number}/codes/BlockingCodes" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route44"
      }
    },
    "/api/v7/banks/{number}/codes/BlockingCodes/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route45"
      }
    },
    "/api/v7/banks/{number}/codes/ClientCategories" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route48"
      }
    },
    "/api/v7/banks/{number}/codes/ClientCategories/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route49"
      }
    },
    "/api/v7/banks/{number}/codes/ClientGroups" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route46"
      }
    },
    "/api/v7/banks/{number}/codes/ClientGroups/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route47"
      }
    },
    "/api/v7/banks/{number}/codes/ClientMainTypes" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route50"
      }
    },
    "/api/v7/banks/{number}/codes/ClientMainTypes/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route51"
      }
    },
    "/api/v7/banks/{number}/codes/ClientSalutations" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route52"
      }
    },
    "/api/v7/banks/{number}/codes/ClientSalutations/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route53"
      }
    },
    "/api/v7/banks/{number}/codes/ClientSegments" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route54"
      }
    },
    "/api/v7/banks/{number}/codes/ClientSegments/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route55"
      }
    },
    "/api/v7/banks/{number}/codes/ClientStatus" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route56"
      }
    },
    "/api/v7/banks/{number}/codes/ClientStatus/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route57"
      }
    },
    "/api/v7/banks/{number}/codes/ContactInitiatives" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route58"
      }
    },
    "/api/v7/banks/{number}/codes/ContactInitiatives/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route59"
      }
    },
    "/api/v7/banks/{number}/codes/ContractStatus" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route60"
      }
    },
    "/api/v7/banks/{number}/codes/ContractStatus/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route61"
      }
    },
    "/api/v7/banks/{number}/codes/ContractTypes4Contract" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route62"
      }
    },
    "/api/v7/banks/{number}/codes/ContractTypes4Contract/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route63"
      }
    },
    "/api/v7/banks/{number}/codes/ContractTypes4PowerOfAttorney" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route64"
      }
    },
    "/api/v7/banks/{number}/codes/ContractTypes4PowerOfAttorney/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route65"
      }
    },
    "/api/v7/banks/{number}/codes/EntryCodesCommercialRegister" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route66"
      }
    },
    "/api/v7/banks/{number}/codes/EntryCodesCommercialRegister/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route67"
      }
    },
    "/api/v7/banks/{number}/codes/FrequenciesOfContact" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route68"
      }
    },
    "/api/v7/banks/{number}/codes/FrequenciesOfContact/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route69"
      }
    },
    "/api/v7/banks/{number}/codes/IdentificationRoles" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route70"
      }
    },
    "/api/v7/banks/{number}/codes/IdentificationRoles/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route71"
      }
    },
    "/api/v7/banks/{number}/codes/Languages" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route72"
      }
    },
    "/api/v7/banks/{number}/codes/Languages/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route73"
      }
    },
    "/api/v7/banks/{number}/codes/LegalCategories" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route74"
      }
    },
    "/api/v7/banks/{number}/codes/LegalCategories/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route75"
      }
    },
    "/api/v7/banks/{number}/codes/LegalForms" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route76"
      }
    },
    "/api/v7/banks/{number}/codes/LegalForms/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route77"
      }
    },
    "/api/v7/banks/{number}/codes/LegalStatus" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route78"
      }
    },
    "/api/v7/banks/{number}/codes/LegalStatus/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route79"
      }
    },
    "/api/v7/banks/{number}/codes/LegalStatusCharacteristics" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route80"
      }
    },
    "/api/v7/banks/{number}/codes/LegalStatusCharacteristics/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route81"
      }
    },
    "/api/v7/banks/{number}/codes/Legitimations" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route82"
      }
    },
    "/api/v7/banks/{number}/codes/Legitimations/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route83"
      }
    },
    "/api/v7/banks/{number}/codes/Mandates" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route84"
      }
    },
    "/api/v7/banks/{number}/codes/Mandates/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route85"
      }
    },
    "/api/v7/banks/{number}/codes/MaritalStatus" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route86"
      }
    },
    "/api/v7/banks/{number}/codes/MaritalStatus/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route87"
      }
    },
    "/api/v7/banks/{number}/codes/ModesOfShipment" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route88"
      }
    },
    "/api/v7/banks/{number}/codes/ModesOfShipment/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route89"
      }
    },
    "/api/v7/banks/{number}/codes/NogaCodes" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route90"
      }
    },
    "/api/v7/banks/{number}/codes/NogaCodes/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route91"
      }
    },
    "/api/v7/banks/{number}/codes/NoteCodes" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route92"
      }
    },
    "/api/v7/banks/{number}/codes/NoteCodes/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route93"
      }
    },
    "/api/v7/banks/{number}/codes/NoteQualities" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route96"
      }
    },
    "/api/v7/banks/{number}/codes/NoteQualities/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route97"
      }
    },
    "/api/v7/banks/{number}/codes/NoteTypes" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route94"
      }
    },
    "/api/v7/banks/{number}/codes/NoteTypes/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route95"
      }
    },
    "/api/v7/banks/{number}/codes/Offices" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route98"
      }
    },
    "/api/v7/banks/{number}/codes/Offices/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route99"
      }
    },
    "/api/v7/banks/{number}/codes/ParticipantStatus" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route100"
      }
    },
    "/api/v7/banks/{number}/codes/ParticipantStatus/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route101"
      }
    },
    "/api/v7/banks/{number}/codes/PepCodes" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route102"
      }
    },
    "/api/v7/banks/{number}/codes/PepCodes/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route103"
      }
    },
    "/api/v7/banks/{number}/codes/PropertyRegimes" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route104"
      }
    },
    "/api/v7/banks/{number}/codes/PropertyRegimes/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route105"
      }
    },
    "/api/v7/banks/{number}/codes/SignatureOrigins" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route106"
      }
    },
    "/api/v7/banks/{number}/codes/SignatureOrigins/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route107"
      }
    },
    "/api/v7/banks/{number}/codes/SignbaseStatus" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route108"
      }
    },
    "/api/v7/banks/{number}/codes/SignbaseStatus/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route109"
      }
    },
    "/api/v7/banks/{number}/codes/SigningAuthorities" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route110"
      }
    },
    "/api/v7/banks/{number}/codes/SigningAuthorities/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route111"
      }
    },
    "/api/v7/banks/{number}/codes/StorageLocations" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route112"
      }
    },
    "/api/v7/banks/{number}/codes/StorageLocations/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route113"
      }
    },
    "/api/v7/banks/{number}/codes/TerminationRules" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route114"
      }
    },
    "/api/v7/banks/{number}/codes/TerminationRules/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route115"
      }
    },
    "/api/v7/banks/{number}/codes/TypesOfCheck" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route116"
      }
    },
    "/api/v7/banks/{number}/codes/TypesOfCheck/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route117"
      }
    },
    "/api/v7/banks/{number}/codes/TypesOfCommunication" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route118"
      }
    },
    "/api/v7/banks/{number}/codes/TypesOfCommunication/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route119"
      }
    },
    "/api/v7/banks/{number}/codes/TypesOfEMail" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route120"
      }
    },
    "/api/v7/banks/{number}/codes/TypesOfEMail/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route121"
      }
    },
    "/api/v7/banks/{number}/codes/TypesOfIdentification" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route122"
      }
    },
    "/api/v7/banks/{number}/codes/TypesOfIdentification/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route123"
      }
    },
    "/api/v7/banks/{number}/codes/VsbStatus" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route124"
      }
    },
    "/api/v7/banks/{number}/codes/VsbStatus/{code}" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "The code (identification) of the code table entry/item",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/CodeTableResponse"
            }
          },
          "400" : {
            "description" : "Error determining the code table for the given id and code"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route125"
      }
    },
    "/api/v7/banks/{number}/duplicates" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Checks whether there is already a client with the same values in the database.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova user bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "firstName",
          "in" : "query",
          "description" : "First name of the client",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "Last name of the client or company name in the case of a company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateOfBirth",
          "in" : "query",
          "description" : "Date of birth (yyyy-MM-dd) of the client",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstNamePartner",
          "in" : "query",
          "description" : "First name of the client's partner",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastNamePartner",
          "in" : "query",
          "description" : "Last name of the client's partner",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateOfBirthPartner",
          "in" : "query",
          "description" : "Date of birth (yyyy-MM-dd) of the client's partner",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/v2.possibleDuplicates"
              }
            }
          },
          "403" : {
            "description" : "No query parameter provided (at least one is required)"
          },
          "404" : {
            "description" : "Error during checking for duplicates in the backend"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route21"
      }
    },
    "/api/v7/banks/{number}/amloDecision" : {
      "get" : {
        "security": [
          {
            "Bearer": [
            ]
          }
        ],
        "tags" : [ "api/v7/banks/{number}" ],
        "summary" : "Returns the risk category based on the delivered input attributes.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Finnova user bank",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "riskReduction",
          "in" : "query",
          "description" : "Code of the risk reduction",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "pepSystem",
          "in" : "query",
          "description" : "Automatically generated code for politically exposed persons",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "riskIncrease",
          "in" : "query",
          "description" : "Code of the risk increase",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "clientMainType",
          "in" : "query",
          "description" : "Client main type",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "clientCategory",
          "in" : "query",
          "description" : "Client category code",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "pepManual",
          "in" : "query",
          "description" : "Manually generated code for politically exposed persons",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "countryOfDomicile",
          "in" : "query",
          "description" : "ISO_3166-1 - Country code of the country of domicile (for corporate clients)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "financialIntermediary",
          "in" : "query",
          "description" : "Is the client a financial intermediary?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "nationality",
          "in" : "query",
          "description" : "ISO_3166-1 - Country code of the leading client's nationality (for private individual and two-person household)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "furtherRisks",
          "in" : "query",
          "description" : "Are there further risk criteria?",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pepManual2ndPerson",
          "in" : "query",
          "description" : "Manually generated code for another politically exposed person with a relationship to the client",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nationality2ndPerson",
          "in" : "query",
          "description" : "ISO_3166-1 - Country code of the referenced client's nationality",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "countryOfDomicileControllingCompany",
          "in" : "query",
          "description" : "Code of the controlling company's country of domicile. This is loaded if the client is controlled by a foreign company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "domiciliaryCompany",
          "in" : "query",
          "description" : "Is it a domiciliary company? (company that does not do business in the country of domicile) ",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "cdbIdentification",
          "in" : "query",
          "description" : "CDB check type code of the client",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "legalStatus",
          "in" : "query",
          "description" : "Code of the legal status of a company",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "noga",
          "in" : "query",
          "description" : "Sector / NOGA code ((Nomenclature Generale des Activites economiques: General Classification of Economic Activities) according to version 2008)",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/v2.amloRiskCategory"
            }
          },
          "400" : {
            "description" : "Error determining the AMLO risk category"
          }
        },
        "x-camelContextId" : "camel-1",
        "x-routeId" : "route126"
      }
    }
  },
  "definitions" : {
    "possibleDuplicates" : {
      "type" : "object",
      "properties" : {
        "number" : {
          "type" : "string",
          "description" : "clientNumber",
          "readOnly" : true
        },
        "externalNumber" : {
          "type" : "string",
          "description" : "Client number for external representation",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "description" : "Technical client ID",
          "readOnly" : true
        },
        "clientStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client status code. This status helps to distinguish inactive clients from active clients",
          "readOnly" : true
        },
        "closureDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Removal date of client relationship",
          "readOnly" : true
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name of the leading person",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name of leading person or company name",
          "readOnly" : true
        },
        "clientHeaderRow2" : {
          "type" : "string",
          "description" : "Client header row",
          "readOnly" : true
        },
        "clientHeaderRow3" : {
          "type" : "string",
          "description" : "Client header row",
          "readOnly" : true
        },
        "postCode" : {
          "type" : "number",
          "description" : "Postcode",
          "readOnly" : true
        },
        "place" : {
          "type" : "string",
          "description" : "Designation of the place (excl. country and postcode)",
          "readOnly" : true
        },
        "canton" : {
          "type" : "string",
          "description" : "Canton",
          "readOnly" : true
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of birth of the individual client or foundation date of a legal entity",
          "readOnly" : true
        },
        "clientIdentified" : {
          "type" : "boolean",
          "description" : "Code for whether a CDB check has been carried out (true) or not (false)",
          "readOnly" : true
        }
      },
      "description" : "Provides all information about a possible duplicate.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.Duplicate"
      }
    },
    "CustomerIdentification" : {
      "type" : "object",
      "required" : [ "externalNumber", "id", "number" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Technical client ID",
          "readOnly" : true
        },
        "number" : {
          "type" : "string",
          "description" : "Client number",
          "readOnly" : true
        },
        "externalNumber" : {
          "type" : "string",
          "description" : "External representation of the client number",
          "readOnly" : true
        }
      },
      "description" : "Reserved client identification.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.CustomerIdentification"
      }
    },
    "amloDecisionResponse" : {
      "type" : "object",
      "properties" : {
        "pepSystem" : {
          "type" : "string",
          "description" : "Automatically generated code for politically exposed persons",
          "readOnly" : true
        },
        "pepManual" : {
          "type" : "string",
          "description" : "Manually generated code for politically exposed persons",
          "readOnly" : true
        },
        "pepCheckDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "furtherRisks" : {
          "type" : "string",
          "description" : "Code showing whether there are further risk criteria",
          "readOnly" : true
        },
        "riskCategory" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Risk category code / Result of the money laundering check",
          "readOnly" : true
        },
        "decisionAdvisor" : {
          "type" : "string",
          "description" : "Advisor's AMLO decision as to whether the relationship is accepted or not",
          "readOnly" : true
        },
        "advisor" : {
          "type" : "string",
          "description" : "User ID of the employee who made the AMLO decision",
          "readOnly" : true
        },
        "decisionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of AMLO decision",
          "readOnly" : true
        }
      },
      "description" : "Delivers the Anti Money Laundering Office (AMLO) information for a particular client.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.AmloInformation"
      }
    },
    "advisor" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Finnova user identification (USER_ID) of the advisor who should be assigned to this new client. The identification of the advisor is only valid together with their role. If only the advisor, without the role, is provided, the advisor is not taken into account and a default advisor, who is assigned to the client, is determined.",
          "readOnly" : true
        },
        "role" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Role of the advisor assigned to this client (reference in table KD1KDKRK). Specification of the advisor's role is mandatory if the advisor is also provided via the interface. If the role alone, without the advisor, is provided, it is not taken into account.",
          "readOnly" : true
        }
      }
    },
    "NUMBER" : {
      "type" : "object",
      "properties" : {
        "inf" : {
          "type" : "boolean"
        },
        "negInf" : {
          "type" : "boolean"
        },
        "posInf" : {
          "type" : "boolean"
        },
        "zero" : {
          "type" : "boolean"
        },
        "int" : {
          "type" : "boolean"
        },
        "stream" : {
          "$ref" : "#/definitions/InputStream"
        },
        "bytes" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "length" : {
          "type" : "integer",
          "format" : "int64"
        },
        "null" : {
          "type" : "boolean"
        }
      }
    },
    "amlo" : {
      "type" : "object",
      "properties" : {
        "pepSystem" : {
          "type" : "string",
          "description" : "Automatically generated code for politically exposed persons",
          "readOnly" : true
        },
        "pepManual" : {
          "type" : "string",
          "description" : "Manually generated code for politically exposed persons",
          "readOnly" : true
        },
        "pepCheckDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "furtherRisks" : {
          "type" : "string",
          "description" : "Code showing whether there are further risk criteria",
          "readOnly" : true
        },
        "riskIncrease" : {
          "description" : "Code of the risk increase",
          "readOnly" : true,
          "$ref" : "#/definitions/NUMBER"
        },
        "riskIncreaseEmployee" : {
          "type" : "string",
          "description" : "User ID of the employee who performed the uprating",
          "readOnly" : true
        },
        "riskIncreaseDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the uprating",
          "readOnly" : true
        },
        "riskReduction" : {
          "description" : "Code of the risk reduction",
          "readOnly" : true,
          "$ref" : "#/definitions/NUMBER"
        },
        "riskReductionEmployee" : {
          "type" : "string",
          "description" : "User ID of the employee who performed the downrating",
          "readOnly" : true
        },
        "riskReductionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the downrating",
          "readOnly" : true
        },
        "decisionAdvisor" : {
          "type" : "string",
          "description" : "Advisor's AMLO decision as to whether the relationship is accepted or not",
          "readOnly" : true
        },
        "advisor" : {
          "type" : "string",
          "description" : "User ID of the employee who made the AMLO decision",
          "readOnly" : true
        },
        "decisionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of AMLO decision",
          "readOnly" : true
        }
      }
    },
    "address" : {
      "type" : "object",
      "required" : [ "dispatchType", "street", "type", "validAfter" ],
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the address type. At least one address must be entered with KD_ADR_LNR = 11 = domicile address",
          "readOnly" : true
        },
        "recipientRef" : {
          "type" : "string",
          "description" : "Recipient reference in the address line, e.g. For the attention of Mr Meier",
          "readOnly" : true
        },
        "street" : {
          "type" : "string",
          "description" : "Street and house number are written together in KD_ADR.STRASSE",
          "readOnly" : true
        },
        "houseNumber" : {
          "type" : "string",
          "description" : "Street and house number are written together in KD_ADR.STRASSE",
          "readOnly" : true
        },
        "additionAddressLine" : {
          "type" : "string",
          "description" : "Additional line can be added before place for foreign addresses or PO boxes (PO box information needs to be directly before place",
          "readOnly" : true
        },
        "addressLine1" : {
          "type" : "string",
          "description" : "Individual address line number 1",
          "readOnly" : true
        },
        "addressLine2" : {
          "type" : "string",
          "description" : "Individual address line number 2",
          "readOnly" : true
        },
        "addressLine3" : {
          "type" : "string",
          "description" : "Individual address line number 3",
          "readOnly" : true
        },
        "placeDes" : {
          "type" : "string",
          "description" : "Designation of the place (only to be used if attribute 'Place' is not filled)(without country and postcode)",
          "readOnly" : true
        },
        "place" : {
          "type" : "string",
          "description" : "Technical sequence number of the place (assigned by Swiss Post, can only be used in the case of addresses with country of domicile 'Switzerland')",
          "readOnly" : true
        },
        "postcode" : {
          "type" : "string",
          "description" : "Postcode (only to be used if attribute 'Place' is not filled)",
          "readOnly" : true
        },
        "country" : {
          "type" : "string",
          "description" : "ISO_3166-1 - country code of the destination country",
          "readOnly" : true
        },
        "careOf" : {
          "type" : "string",
          "description" : "Code if address is a c/o address. Not permitted for domicile address.",
          "readOnly" : true
        },
        "vatCountry" : {
          "type" : "string",
          "description" : "ISO_3166-1 - country code of the domicile address for the VAT calculation",
          "readOnly" : true
        },
        "validAfter" : {
          "type" : "string",
          "description" : "Date after which the address is valid, opening date minus one day",
          "readOnly" : true
        },
        "dispatchType" : {
          "type" : "string",
          "description" : "Dispatch type code",
          "readOnly" : true
        },
        "advertisingDesired" : {
          "type" : "string",
          "description" : "Code showing whether or not advertising is desired",
          "readOnly" : true
        },
        "communication" : {
          "type" : "array",
          "description" : "communication",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/communication"
          }
        }
      }
    },
    "partner" : {
      "type" : "object",
      "required" : [ "lastName", "nationality" ],
      "properties" : {
        "formOfAddress" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Form of address code of the individual client",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name of the partner",
          "readOnly" : true
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name of the partner",
          "readOnly" : true
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of birth of the individual client",
          "readOnly" : true
        },
        "nationality" : {
          "type" : "string",
          "description" : "ISO_3166-1 - country code of the partner's nationality",
          "readOnly" : true
        },
        "nationality2" : {
          "type" : "string",
          "description" : "ISO_3166-1 - country code of the second nationality if the partner has dual citizenship",
          "readOnly" : true
        },
        "title" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the partner's academic title",
          "readOnly" : true
        },
        "maritalStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the partner's marital status",
          "readOnly" : true
        }
      }
    },
    "InputStream" : {
      "type" : "object"
    },
    "acceptanceRatio" : {
      "type" : "object",
      "properties" : {
        "participantStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Acceptance ratio that defines the participant status",
          "readOnly" : true
        },
        "acceptanceRatio" : {
          "type" : "number",
          "description" : "Acceptance ratio percentage",
          "readOnly" : true
        },
        "validFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The acceptance ratio is valid as of this date (exclusive)",
          "readOnly" : true
        },
        "validUntil" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The acceptance ratio is valid until this date (inclusive)",
          "readOnly" : true
        }
      }
    },
    "client" : {
      "type" : "object",
      "required" : [ "category", "clientMainType", "clientStatus", "language", "lastName", "nationality" ],
      "properties" : {
        "clientMainType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Main client type code",
          "readOnly" : true
        },
        "category" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client category code",
          "readOnly" : true
        },
        "number" : {
          "type" : "string",
          "description" : "Internal client number ",
          "readOnly" : true
        },
        "externalNumber" : {
          "type" : "string",
          "description" : "External representation of the client number",
          "readOnly" : true
        },
        "clientStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client status code",
          "readOnly" : true
        },
        "formOfAddress" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Form of address code for individual client",
          "readOnly" : true
        },
        "salutation" : {
          "type" : "string",
          "description" : "The individual salutation can be used to override the generated salutation (e.g. for company, system suggestion: 'Dear Client')",
          "readOnly" : true
        },
        "title" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the academic title",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name of the leading person",
          "readOnly" : true
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name of the leading person",
          "readOnly" : true
        },
        "nameBeforeMarriage" : {
          "type" : "string",
          "description" : "Client's name before marriage",
          "readOnly" : true
        },
        "nameAddition" : {
          "type" : "string",
          "description" : "Additional line for the name or the company designation ",
          "readOnly" : true
        },
        "dateOfBirth" : {
          "type" : "string",
          "description" : "Date of birth of the individual client or foundation date of a legal entity",
          "readOnly" : true
        },
        "yearOfBirth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Year of birth of the individual client or year of foundation of a company",
          "readOnly" : true
        },
        "maritalStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the leading client's marital status",
          "readOnly" : true
        },
        "matrimonialPropertyRegime" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the leading client's matrimonial property regime",
          "readOnly" : true
        },
        "nationality2" : {
          "type" : "string",
          "description" : "ISO_3166-1 - country code of the second nationality in the case of dual citizenship",
          "readOnly" : true
        },
        "nationality" : {
          "type" : "string",
          "description" : "ISO_3166-1 - Country code of the leading client's nationality (for private individual and two-person household)",
          "readOnly" : true
        },
        "placeOfOrigin" : {
          "type" : "string",
          "description" : " Code of the place of origin of an individual client or company domicile of a company",
          "readOnly" : true
        },
        "domicile" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Head office/branch number (within the bank)",
          "readOnly" : true
        },
        "countryOfDomicileControllingCompany" : {
          "type" : "string",
          "description" : "ISO_3166-1 - country code of the controlling company's country of domicile. This is loaded if the client is controlled by a foreign company.",
          "readOnly" : true
        },
        "countryOfDomicile" : {
          "type" : "string",
          "description" : "ISO_3166-1 - Country code of the country of domicile (for corporate clients)",
          "readOnly" : true
        },
        "legalStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the company's legal status",
          "readOnly" : true
        },
        "legalForm" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code that describes the following information for natural persons: marital status, gender and matrimonial law. For companies, it describes the legal form",
          "readOnly" : true
        },
        "andRelationship" : {
          "type" : "string",
          "description" : "Flag indicating if two-person household is an 'and' relationship (true) or an 'or' relationship (false)",
          "readOnly" : true
        },
        "contactPerson" : {
          "type" : "string",
          "description" : "Free text entry of a contact person at the client company",
          "readOnly" : true
        },
        "financialIntermediary" : {
          "type" : "string",
          "description" : "Yes / No code showing whether or not the client is a financial intermediary",
          "readOnly" : true
        },
        "companyId" : {
          "type" : "string",
          "description" : "Swiss Business Identification Number, which replaces the old VAT number",
          "readOnly" : true
        },
        "entryCodeCommercialRegister" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the commercial register entry code",
          "readOnly" : true
        },
        "commercialRegisterEntryDate" : {
          "type" : "string",
          "description" : "Date of entry in the commercial register according to field HR_EINTR_CD",
          "readOnly" : true
        },
        "commercialRegisterEntryDeletionDate" : {
          "type" : "string",
          "description" : "Deletion date of entry in the commercial register",
          "readOnly" : true
        },
        "zekID" : {
          "type" : "string",
          "description" : "ZEK (Central Office for Credit Information) client ID",
          "readOnly" : true
        },
        "teledataID" : {
          "type" : "string",
          "description" : "Client ID for Teledata",
          "readOnly" : true
        },
        "domiciliaryCompany" : {
          "type" : "string",
          "description" : "Code for a domiciliary company (company that does not do business in the country of domicile)",
          "readOnly" : true
        },
        "numberOfEmployeesAsAt" : {
          "type" : "string",
          "description" : "Number of employees as at date",
          "readOnly" : true
        },
        "numberOfEmployees" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of employees of the company ",
          "readOnly" : true
        },
        "noga" : {
          "type" : "string",
          "description" : "Economic activity / NOGA code ((Nomenclature Generale des Activites economiques: economic activity) according to version 2008",
          "readOnly" : true
        },
        "clientGroupType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client group type code",
          "readOnly" : true
        },
        "clientSegment" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client segment code",
          "readOnly" : true
        },
        "language" : {
          "type" : "string",
          "description" : "ISO_639-1 - language code of the leading person's first language",
          "readOnly" : true
        },
        "frequencyOfContact" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the frequence of client contact",
          "readOnly" : true
        },
        "bulkMailing" : {
          "type" : "string",
          "description" : "Code for whether bulk mailing is permitted or not",
          "readOnly" : true
        },
        "openingDate" : {
          "type" : "string",
          "description" : "Date of the client relationship opening",
          "readOnly" : true
        },
        "blockingCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Blocking and pledging code",
          "readOnly" : true
        },
        "advisor" : {
          "description" : "Advisors can be provided with their roles when opening clients here. Please note that both fields need to be specified so that the advisor is taken into account accordingly.",
          "readOnly" : true,
          "$ref" : "#/definitions/advisor"
        },
        "partner" : {
          "description" : "partner",
          "readOnly" : true,
          "$ref" : "#/definitions/partner"
        },
        "addresses" : {
          "type" : "array",
          "description" : "addresses",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/address"
          }
        },
        "amlo" : {
          "description" : "amlo",
          "readOnly" : true,
          "$ref" : "#/definitions/amlo"
        },
        "acceptanceRatio" : {
          "description" : "acceptanceRatio",
          "readOnly" : true,
          "$ref" : "#/definitions/acceptanceRatio"
        }
      },
      "description" : "Client data that must be added to Finnova",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.Client"
      }
    },
    "communication" : {
      "type" : "object",
      "required" : [ "type", "value" ],
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "E-mail address, telephone number, etc. (for telephone number, correct format must be used – FATCA indicium)",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "description" : "Dispatch type code",
          "readOnly" : true
        },
        "comment" : {
          "type" : "string",
          "description" : "Free text comment for the communication entry",
          "readOnly" : true
        }
      }
    },
    "clientResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Technical client identification number for client created",
          "readOnly" : true
        },
        "counterpartyCategory" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Counterparty category code according to CAO",
          "readOnly" : true
        }
      },
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.CreateClientResponse"
      }
    },
    "accountReservationQuery" : {
      "type" : "object",
      "required" : [ "accountType", "currency" ],
      "properties" : {
        "accountType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Account type code",
          "readOnly" : true
        },
        "currency" : {
          "type" : "string",
          "description" : "ISO_4217 - Currency code",
          "readOnly" : true
        }
      },
      "description" : "Required account opening data.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.AccountOpeningData"
      }
    },
    "accountReservationResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Reserved technical account ID",
          "readOnly" : true
        },
        "number" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Reserved account number",
          "readOnly" : true
        },
        "externalNumber" : {
          "type" : "string",
          "description" : "Reserved external representation of the account number",
          "readOnly" : true
        }
      },
      "description" : "Reserves a new account number in Finnova without opening an account.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.AccountIdentification"
      }
    },
    "Card" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Card type code (debit)",
          "readOnly" : true
        },
        "authorisedPerson" : {
          "type" : "string",
          "description" : "Authorised person who can have use of the card (debit)",
          "readOnly" : true
        }
      },
      "description" : "Adds a new card for a new client.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.Card"
      }
    },
    "CardResponse" : {
      "type" : "object",
      "required" : [ "id", "number" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Technical card number of the ordered card",
          "readOnly" : true
        },
        "number" : {
          "type" : "integer",
          "description" : "Card number of the ordered card",
          "readOnly" : true
        }
      },
      "description" : "Create card response",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.CardResponseSuccess"
      }
    },
    "account" : {
      "type" : "object",
      "required" : [ "currency", "type" ],
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Account type code",
          "readOnly" : true
        },
        "externalNumber" : {
          "type" : "string",
          "description" : "Internal Finnova representation of the externally recognised account number",
          "readOnly" : true
        },
        "portfolioNumber" : {
          "type" : "string",
          "description" : "Portfolio (techn. no.) allocated to the account. If nothing is returned, the default portfolio '00' is used.",
          "readOnly" : true
        },
        "category" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Account category for the designation of the account, which appears on statements",
          "readOnly" : true
        },
        "currency" : {
          "type" : "string",
          "description" : "ISO_4217 - Account currency code, or valuation currency in the case of a custody account",
          "readOnly" : true
        }
      },
      "description" : "Personal data and account data regarding the identified client in the resource.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.StoreAccountRequestBody"
      }
    },
    "accountResponseSuccess" : {
      "type" : "object",
      "required" : [ "category", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Technical account ID",
          "readOnly" : true
        },
        "category" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Category for the designation of the account if no free text is used",
          "readOnly" : true
        }
      },
      "description" : "Create account response",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.StoreAccountResponse"
      }
    },
    "cdbRequest" : {
      "type" : "object",
      "properties" : {
        "clientIdRelationship" : {
          "type" : "string",
          "description" : "This technical client ID refers to the client under which the relevant CDB check took place.",
          "readOnly" : true
        },
        "clientRole" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Role of the client under the CDB client relationship",
          "readOnly" : true
        },
        "checkType" : {
          "type" : "string",
          "description" : "Check type code of the client",
          "readOnly" : true
        },
        "clientDocumentType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the client document type",
          "readOnly" : true
        },
        "identificationNumber" : {
          "type" : "string",
          "description" : "ID number of the document selected under IDDOC_CD",
          "readOnly" : true
        },
        "idDateOfIssue" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of issue of the identity document",
          "readOnly" : true
        },
        "idValidUntil" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "ID document 'valid until' date",
          "readOnly" : true
        },
        "idCountryOfIssue" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "ISO_3166-1 - country code of the ID country of issue",
          "readOnly" : true
        },
        "documentPlaceOfIssue" : {
          "type" : "string",
          "description" : "Place of issue of the ID",
          "readOnly" : true
        },
        "identityCheck" : {
          "type" : "string",
          "description" : "Radio button for checking whether or not the identity is ok",
          "readOnly" : true
        },
        "checker" : {
          "type" : "string",
          "description" : "User ID of the Finnova user / employee who performed the check",
          "readOnly" : true
        },
        "checkDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of check",
          "readOnly" : true
        }
      },
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.CreateCdbData"
      }
    },
    "contract" : {
      "type" : "object",
      "required" : [ "status", "type" ],
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of contract type",
          "readOnly" : true
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Status code of the contract",
          "readOnly" : true
        },
        "validFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Contract valid from date. Mandatory field with status Valid",
          "readOnly" : true
        },
        "validUntil" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Contract valid until date (inclusive)",
          "readOnly" : true
        },
        "printingDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Printing time stamp of this contract",
          "readOnly" : true
        },
        "approvalDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which bank authorities acknowledged or approved contract",
          "readOnly" : true
        },
        "signatureDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the contract signature according to 'Place and date'",
          "readOnly" : true
        },
        "portfolioAllocated" : {
          "type" : "string",
          "description" : "Technical portfolio number which is required if the contract refers to this portfolio",
          "readOnly" : true
        },
        "accountAllocated" : {
          "type" : "string",
          "description" : "Technical account number which is required if the contract refers to this account",
          "readOnly" : true
        },
        "comment" : {
          "type" : "string",
          "description" : "Free text entry of comments for this contract",
          "readOnly" : true
        },
        "terminationRule" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Rule code of the contract termination",
          "readOnly" : true
        },
        "storageLocation" : {
          "type" : "string",
          "description" : "Code of the document storage location",
          "readOnly" : true
        },
        "deliveryTypeEbanking" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Accounts of a contract opened in the future receive electronic documents via internet banking by default, 4 = yes, otherwise no",
          "readOnly" : true
        },
        "docId" : {
          "type" : "string",
          "description" : "Technical document number of expected return documents or document numbers released for that",
          "readOnly" : true
        },
        "rolesTelebanking" : {
          "type" : "array",
          "description" : "Telebanking roles",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/telebankingRole"
          }
        },
        "allocationAccounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/contractAllocationAccount"
          }
        },
        "allocationClients" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/contractAllocationClient"
          }
        }
      },
      "description" : "Client contract request",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.PutContractRequest"
      }
    },
    "contractAllocationAccount" : {
      "type" : "object",
      "required" : [ "account", "accountHolder" ],
      "properties" : {
        "accountHolder" : {
          "type" : "string",
          "description" : "Technical client number",
          "readOnly" : true
        },
        "portfolio" : {
          "type" : "string",
          "description" : "Technical portfolio number",
          "readOnly" : true
        },
        "account" : {
          "type" : "string",
          "description" : "Technical account number",
          "readOnly" : true
        },
        "authorisationType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Authorisation type of allocated accounts which sets the defined control code values accordingly",
          "readOnly" : true
        },
        "dailyLimitAuthorisation1" : {
          "type" : "integer",
          "description" : "Daily limit for 1 authorisation",
          "readOnly" : true
        },
        "dailyLimitAuthorisation2" : {
          "type" : "integer",
          "description" : "Daily limit for 2 authorisations",
          "readOnly" : true
        },
        "dailyLimitAbsolute" : {
          "type" : "integer",
          "description" : "Absolute daily limit",
          "readOnly" : true
        },
        "monthlyLimitAuthorisation1" : {
          "type" : "integer",
          "description" : "Monthly limit for 1 authorisation",
          "readOnly" : true
        },
        "monthlyLimitAuthorisation2" : {
          "type" : "integer",
          "description" : "Monthly limit for 2 authorisations",
          "readOnly" : true
        },
        "monthlyLimitAbsolute" : {
          "type" : "integer",
          "description" : "Absolute monthly limit",
          "readOnly" : true
        }
      },
      "description" : "Contract allocation account"
    },
    "contractAllocationClient" : {
      "type" : "object",
      "required" : [ "client" ],
      "properties" : {
        "client" : {
          "type" : "string",
          "description" : "Technical client number",
          "readOnly" : true
        },
        "portfolio" : {
          "type" : "string",
          "description" : "Technical portfolio number",
          "readOnly" : true
        },
        "autoActivation" : {
          "type" : "string",
          "description" : "Control code for whether newly opened accounts should be allocated automatically, Yes / No code",
          "readOnly" : true
        }
      },
      "description" : "Contract allocation client"
    },
    "telebankingRole" : {
      "type" : "object",
      "properties" : {
        "role" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Role code for telebanking contract",
          "readOnly" : true
        }
      },
      "description" : "Role code for telebanking contract"
    },
    "contractResponseSuccess" : {
      "type" : "object",
      "required" : [ "contractId", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Technical contract number",
          "readOnly" : true
        },
        "contractId" : {
          "type" : "string",
          "description" : "Bank-internal contract ID of the entered contract",
          "readOnly" : true
        }
      },
      "description" : "Client contract response",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.PutContractResponse"
      }
    },
    "note" : {
      "type" : "object",
      "properties" : {
        "contactOf" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time of the note creation when",
          "readOnly" : true
        },
        "noteType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client note type code",
          "readOnly" : true
        },
        "contactType" : {
          "type" : "string",
          "description" : "Code of the client contact type",
          "readOnly" : true
        },
        "noteCode" : {
          "type" : "string",
          "description" : "Code of the client note code",
          "readOnly" : true
        },
        "employee" : {
          "type" : "string",
          "description" : "User ID of the employee who had contact with the client and who entered this note",
          "readOnly" : true
        },
        "initiative" : {
          "type" : "string",
          "description" : "Code for whether contact was made on the advisor's initiative (bank) or the client's initiative",
          "readOnly" : true
        },
        "quality" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Quality code of the note",
          "readOnly" : true
        },
        "amount" : {
          "description" : "Note amount and currency",
          "readOnly" : true,
          "$ref" : "#/definitions/amount"
        },
        "property" : {
          "type" : "string",
          "description" : "Note property free text",
          "readOnly" : true
        },
        "comment" : {
          "type" : "string",
          "description" : "Comment on this note regarding this contact",
          "readOnly" : true
        }
      },
      "description" : "Note data that needs to be entered for the selected client.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.ClientNoteRequest"
      }
    },
    "amount" : {
      "type" : "object",
      "required" : [ "currency", "value" ],
      "properties" : {
        "value" : {
          "type" : "number",
          "description" : "Note amount",
          "readOnly" : true
        },
        "currency" : {
          "type" : "string",
          "description" : "ISO_4217 - Currency code for the note amount",
          "readOnly" : true
        }
      },
      "description" : "Note amount and currency"
    },
    "noteResponse" : {
      "type" : "object",
      "required" : [ "client", "id" ],
      "properties" : {
        "client" : {
          "type" : "string",
          "description" : "Technical client ID",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "description" : "Note ID of the created note",
          "readOnly" : true
        }
      },
      "description" : "Note successfully created",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.ClientNoteResponse"
      }
    },
    "pendingTask" : {
      "type" : "object",
      "properties" : {
        "deadline" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Deadline of pending task. May be compulsory depending on pending task type",
          "readOnly" : true
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Entry date of the pending task",
          "readOnly" : true
        },
        "contactType" : {
          "type" : "string",
          "description" : "Code of the client contact type",
          "readOnly" : true
        },
        "pendingTaskType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Pending client task code",
          "readOnly" : true
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Status of the pending task",
          "readOnly" : true
        },
        "completedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time (dd.mm.yyyy hh:mm:ss) of completion",
          "readOnly" : true
        },
        "display" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "View code of the pending client task. Depending on the type of pending task, restriction may or may not be possible.",
          "readOnly" : true
        },
        "employee" : {
          "type" : "string",
          "description" : "User ID of the employee who is responsible for this pending task",
          "readOnly" : true
        },
        "amount" : {
          "description" : "Pending task amount and currency",
          "readOnly" : true,
          "$ref" : "#/definitions/PendingTaskAmount"
        },
        "orderNo" : {
          "type" : "string",
          "description" : "Original order this pending task refers to",
          "readOnly" : true
        },
        "comment" : {
          "type" : "string",
          "description" : "Comment regarding this pending client task. Depending on the type of pending task, loaded obligatorily or optionally.",
          "readOnly" : true
        }
      },
      "description" : "Pending task data that needs to be entered for the selected client",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.PendingTaskRequestBody"
      }
    },
    "PendingTaskAmount" : {
      "type" : "object",
      "required" : [ "currency", "value" ],
      "properties" : {
        "value" : {
          "type" : "number",
          "description" : "Pending task amount",
          "readOnly" : true
        },
        "currency" : {
          "type" : "string",
          "description" : "ISO_4217 - Currency code for the pending task amount",
          "readOnly" : true
        }
      },
      "description" : "Pending task amount and currency"
    },
    "PendingTaskResponse" : {
      "type" : "object",
      "required" : [ "client", "id" ],
      "properties" : {
        "client" : {
          "type" : "string",
          "description" : "Technical client ID",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "description" : "Pending task ID of the created pending task",
          "readOnly" : true
        }
      },
      "description" : "Pending tasks response",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.PendingTaskResponse"
      }
    },
    "powerOfAttorney" : {
      "type" : "object",
      "required" : [ "status", "type" ],
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of contract type",
          "readOnly" : true
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Status code of the contract",
          "readOnly" : true
        },
        "validFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Contract 'valid from' date. Mandatory field with status 'Valid'",
          "readOnly" : true
        },
        "validUntil" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Contract 'valid until' date (inclusive)",
          "readOnly" : true
        },
        "printingDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Printing time stamp of this contract",
          "readOnly" : true
        },
        "approvalDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which bank authorities acknowledged or approved contract",
          "readOnly" : true
        },
        "signatureDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the contract signature according to 'Place and date'",
          "readOnly" : true
        },
        "portfolioAllocated" : {
          "type" : "string",
          "description" : "Technical portfolio number of the resource client which is required if the power of attorney concerns this portfolio",
          "readOnly" : true
        },
        "accountAllocated" : {
          "type" : "string",
          "description" : "Technical account number of the resource client which is required if the power of attorney refers to this account",
          "readOnly" : true
        },
        "comment" : {
          "type" : "string",
          "description" : "Free text entry of comments for this contract",
          "readOnly" : true
        },
        "terminationRule" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Rule code of the contract termination",
          "readOnly" : true
        },
        "storageLocation" : {
          "type" : "string",
          "description" : "Code of the document storage location",
          "readOnly" : true
        },
        "allocationClient" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/powerOfAttorneyAllocationClient"
          }
        }
      },
      "description" : "Power of attorney agreement request",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.CreatePowerOfAttorneyRequest"
      }
    },
    "powerOfAttorneySignBase" : {
      "type" : "object",
      "required" : [ "legitimation", "status" ],
      "properties" : {
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the Signbase power of attorney status",
          "readOnly" : true
        },
        "legitimation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the legitimation for the power of attorney",
          "readOnly" : true
        },
        "signatureOrigin" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the signature origin",
          "readOnly" : true
        }
      },
      "description" : "Power of attorney sign base"
    },
    "powerOfAttorneyAllocationClient" : {
      "type" : "object",
      "required" : [ "client", "signingAuthority" ],
      "properties" : {
        "client" : {
          "type" : "string",
          "description" : "Technical client number",
          "readOnly" : true
        },
        "signingAuthority" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the signing authority of the allocated client",
          "readOnly" : true
        },
        "signBase" : {
          "description" : "Power of attorney sign base",
          "readOnly" : true,
          "$ref" : "#/definitions/powerOfAttorneySignBase"
        }
      },
      "description" : "Power of attorney allocation client"
    },
    "powerOfAttorneyResponseSuccess" : {
      "type" : "object",
      "required" : [ "contractId", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Technical contract number",
          "readOnly" : true
        },
        "contractId" : {
          "type" : "string",
          "description" : "Bank-internal contract ID of the entered contract",
          "readOnly" : true
        }
      },
      "description" : "Power of attorney agreement successfully created and allocated.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.CreatePowerOfAttorneyResponse"
      }
    },
    "ClientRelationshipRequest" : {
      "type" : "object",
      "required" : [ "number", "relationshipClientId" ],
      "properties" : {
        "relationshipClientId" : {
          "type" : "string",
          "description" : "Technical client identification number of the client with a relationship to the client in the URI",
          "readOnly" : true
        },
        "number" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the relationship number",
          "readOnly" : true
        },
        "since" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date since which this relationship exists",
          "readOnly" : true
        },
        "until" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date until which this relationship existed (Used for EU interest taxation)",
          "readOnly" : true
        },
        "perCapitaAllocation" : {
          "type" : "string",
          "description" : "Per-capita allocation",
          "readOnly" : true
        },
        "participationRate" : {
          "type" : "number",
          "description" : "Participation rate of participants",
          "readOnly" : true
        },
        "comments" : {
          "type" : "string",
          "description" : "Comments regarding this relationship",
          "readOnly" : true
        }
      },
      "description" : "Defines the relationship between the clients.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.ClientRelationshipRequest"
      }
    },
    "relationshipResponseSuccess" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Technical relationship identification number",
          "readOnly" : true
        }
      },
      "description" : "Client relationship successfully created.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.CreateRelationshipResponse"
      }
    },
    "amloRiskCategory" : {
      "type" : "object",
      "properties" : {
        "amloRiskCategory" : {
          "type" : "string",
          "description" : "Risk category code / Result of the money laundering check",
          "readOnly" : true
        }
      },
      "description" : "Returns the risk category based on the delivered input attributes.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v1.AmloDecisionResponse"
      }
    },
    "v2.CustomerIdentification" : {
      "type" : "object",
      "required" : [ "externalNumber", "key", "number" ],
      "properties" : {
        "key" : {
          "type" : "integer",
          "description" : "Technical client sequence number",
          "readOnly" : true
        },
        "number" : {
          "type" : "string",
          "description" : "Client number",
          "readOnly" : true
        },
        "externalNumber" : {
          "type" : "string",
          "description" : "External representation of the client number",
          "readOnly" : true
        }
      },
      "description" : "Reserved client identification.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.CustomerIdentification"
      }
    },
    "v2.advisor" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Finnova user identification (USER_ID) of the advisor who should be assigned to this new client. The identification of the advisor is only valid together with their role. If only the advisor, without the role, is provided, the advisor is not taken into account and a default advisor, who is assigned to the client, is determined.",
          "readOnly" : true
        },
        "role" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Role of the advisor assigned to this client (reference in table KD1KDKRK). Specification of the advisor's role is mandatory if the advisor is also provided via the interface. If the role alone, without the advisor, is provided, it is not taken into account.",
          "readOnly" : true
        }
      }
    },
    "v2.acceptanceRatio" : {
      "type" : "object",
      "properties" : {
        "participantStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Acceptance ratio that defines the participant status",
          "readOnly" : true
        },
        "acceptanceRatio" : {
          "type" : "number",
          "description" : "Percentage rate at which a WIR participant wants to accept payments in WIR",
          "readOnly" : true
        },
        "validFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The acceptance ratio is valid as of this date (exclusive)",
          "readOnly" : true
        },
        "validUntil" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The acceptance ratio is valid until this date (inclusive). 'MAX_DATE' is loaded in the case of unlimited validity.",
          "readOnly" : true
        }
      }
    },
    "v2.amlo" : {
      "type" : "object",
      "properties" : {
        "pepSystem" : {
          "type" : "string",
          "description" : "Automatically generated code for politically exposed persons",
          "readOnly" : true
        },
        "pepManual" : {
          "type" : "string",
          "description" : "Manually generated code for politically exposed persons",
          "readOnly" : true
        },
        "pepCheckDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "PEP timestamp (yyyy-MM-dd HH:mm:ss) of the last check",
          "readOnly" : true
        },
        "furtherRisks" : {
          "type" : "boolean",
          "description" : "Flag showing whether there are further risk criteria",
          "readOnly" : true
        },
        "riskIncrease" : {
          "description" : "Code of the risk increase",
          "readOnly" : true,
          "$ref" : "#/definitions/NUMBER"
        },
        "riskIncreaseEmployee" : {
          "type" : "string",
          "description" : "User ID of the employee who performed the uprating",
          "readOnly" : true
        },
        "riskIncreaseDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the uprating (yyyy-MM-dd)",
          "readOnly" : true
        },
        "riskReduction" : {
          "description" : "Code of the risk reduction",
          "readOnly" : true,
          "$ref" : "#/definitions/NUMBER"
        },
        "riskReductionEmployee" : {
          "type" : "string",
          "description" : "User ID of the employee who performed the downrating",
          "readOnly" : true
        },
        "riskReductionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the downrating (yyyy-MM-dd)",
          "readOnly" : true
        },
        "decisionAdvisor" : {
          "type" : "boolean",
          "description" : "Advisor's AMLO decision as to whether the relationship is accepted or not",
          "readOnly" : true
        },
        "advisor" : {
          "type" : "string",
          "description" : "User ID of the employee who made the AMLO decision",
          "readOnly" : true
        },
        "decisionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the AMLO decision",
          "readOnly" : true
        }
      }
    },
    "v2.address" : {
      "type" : "object",
      "required" : [ "dispatchType", "street", "type", "validAfter" ],
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the address type. At least one address with KD_ADR_LNR = 11 = domicile address needs to be entered.",
          "readOnly" : true
        },
        "recipientRef" : {
          "type" : "string",
          "description" : "Recipient reference in the address line, e.g. For the attention of Mr Meier",
          "readOnly" : true
        },
        "street" : {
          "type" : "string",
          "description" : "Street and house number are written together in KD_ADR.STRASSE",
          "readOnly" : true
        },
        "houseNumber" : {
          "type" : "string",
          "description" : "Street and house number are written together in KD_ADR.STRASSE",
          "readOnly" : true
        },
        "additionAddressLine" : {
          "type" : "string",
          "description" : "Additional line directly before Place for foreign addresses or PO boxes (PO box information needs to be directly before Place)",
          "readOnly" : true
        },
        "addressLine1" : {
          "type" : "string",
          "description" : "Individual address line number 1",
          "readOnly" : true
        },
        "addressLine2" : {
          "type" : "string",
          "description" : "Individual address line number 2",
          "readOnly" : true
        },
        "addressLine3" : {
          "type" : "string",
          "description" : "Individual address line number 3",
          "readOnly" : true
        },
        "placeDes" : {
          "type" : "string",
          "description" : "Designation of the place (only to be used if attribute 'Place' is not filled)(without country and postcode)",
          "readOnly" : true
        },
        "place" : {
          "type" : "string",
          "description" : "Technical sequence number of the place (assigned by Swiss Post, can only be used in the case of addresses with country of domicile 'Switzerland')",
          "readOnly" : true
        },
        "postcode" : {
          "type" : "string",
          "description" : "Postcode (only to be used if attribute 'Place' is not filled)",
          "readOnly" : true
        },
        "country" : {
          "type" : "string",
          "description" : "ISO_3166-1 - country code of the destination country",
          "readOnly" : true
        },
        "careOf" : {
          "type" : "boolean",
          "description" : "Flag whether address is a c/o address. Not permitted for domicile address.",
          "readOnly" : true
        },
        "vatCountry" : {
          "type" : "string",
          "description" : "ISO_3166-1 - country code of the domicile address, for the VAT calculation",
          "readOnly" : true
        },
        "validAfter" : {
          "type" : "string",
          "description" : "Date after which the address is valid, opening date minus one day",
          "readOnly" : true
        },
        "dispatchType" : {
          "type" : "string",
          "description" : "Dispatch type code",
          "readOnly" : true
        },
        "advertisingDesired" : {
          "type" : "boolean",
          "description" : "Flag whether or not advertising is desired",
          "readOnly" : true
        },
        "communication" : {
          "type" : "array",
          "description" : "communication",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/v2.communication"
          }
        }
      }
    },
    "v2.communication" : {
      "type" : "object",
      "required" : [ "type", "value" ],
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "E-mail address, telephone number, etc. (for telephone number, correct format must be used – FATCA indicium)",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "description" : "Dispatch type code",
          "readOnly" : true
        },
        "comment" : {
          "type" : "string",
          "description" : "Free text comment for the communication entry",
          "readOnly" : true
        }
      }
    },
    "v2.client" : {
      "type" : "object",
      "required" : [ "category", "clientMainType", "clientStatus", "language", "lastName", "nationality" ],
      "properties" : {
        "clientMainType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Main client type code",
          "readOnly" : true
        },
        "category" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client category code",
          "readOnly" : true
        },
        "number" : {
          "type" : "string",
          "description" : "Internal client number ",
          "readOnly" : true
        },
        "externalNumber" : {
          "type" : "string",
          "description" : "External representation of the client number",
          "readOnly" : true
        },
        "clientStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client status",
          "readOnly" : true
        },
        "formOfAddress" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Form of address code of the individual client",
          "readOnly" : true
        },
        "salutation" : {
          "type" : "string",
          "description" : "The individual salutation can be used to override the generated salutation (e.g. for company, system suggestion: 'Dear Client')",
          "readOnly" : true
        },
        "title" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the academic title",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name of the leading person",
          "readOnly" : true
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name of the leading person",
          "readOnly" : true
        },
        "nameBeforeMarriage" : {
          "type" : "string",
          "description" : "Name before marriage of the client",
          "readOnly" : true
        },
        "nameAddition" : {
          "type" : "string",
          "description" : "Additional line for the name or the company designation ",
          "readOnly" : true
        },
        "dateOfBirth" : {
          "type" : "string",
          "description" : "Date of birth of the individual client or foundation date of a legal entity",
          "readOnly" : true
        },
        "yearOfBirth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Year of birth of the individual client or year of foundation of a company",
          "readOnly" : true
        },
        "maritalStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Marital status of the leading client",
          "readOnly" : true
        },
        "matrimonialPropertyRegime" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Matrimonial property regime of the leading client",
          "readOnly" : true
        },
        "nationality2" : {
          "type" : "string",
          "description" : "ISO_3166-1 - country code of second nationality in the case of dual national",
          "readOnly" : true
        },
        "nationality" : {
          "type" : "string",
          "description" : "ISO_3166-1 - Country code of the nationality of the leading client",
          "readOnly" : true
        },
        "placeOfOrigin" : {
          "type" : "string",
          "description" : "Technical sequence number of the place of origin of an individual client or company domicile of a company",
          "readOnly" : true
        },
        "domicile" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Office/branch number (within the bank)",
          "readOnly" : true
        },
        "countryOfDomicileControllingCompany" : {
          "type" : "string",
          "description" : "ISO_3166-1 - country code of the controlling company's country of domicile. This is loaded if the client is controlled by a foreign company.",
          "readOnly" : true
        },
        "countryOfDomicile" : {
          "type" : "string",
          "description" : "ISO_3166-1 - Country code of the country of domicile (for corporate clients)",
          "readOnly" : true
        },
        "legalStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Legal status of a company",
          "readOnly" : true
        },
        "legalForm" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code that describes the following information for natural persons: marital status, gender and matrimonial law. For companies, it describes the legal form",
          "readOnly" : true
        },
        "andRelationship" : {
          "type" : "boolean",
          "description" : "Flag indicating if two-person household is an 'and' relationship (true) or an 'or' relationship (false)",
          "readOnly" : true
        },
        "contactPerson" : {
          "type" : "string",
          "description" : "Free text entry of a contact person at the client company",
          "readOnly" : true
        },
        "financialIntermediary" : {
          "type" : "boolean",
          "description" : "Flag showing whether the client is a financial intermediary (true)",
          "readOnly" : true
        },
        "companyId" : {
          "type" : "string",
          "description" : "Swiss Business Identification Number, which replaces the old VAT number",
          "readOnly" : true
        },
        "entryCodeCommercialRegister" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the commercial register entry code",
          "readOnly" : true
        },
        "commercialRegisterEntryDate" : {
          "type" : "string",
          "description" : "Date (yyyy-MM-dd) of the entry in the commercial register",
          "readOnly" : true
        },
        "commercialRegisterEntryDeletionDate" : {
          "type" : "string",
          "description" : "Deletion date (yyyy-MM-dd) of the entry in the commercial register",
          "readOnly" : true
        },
        "zekID" : {
          "type" : "string",
          "description" : "ZEK (Central Office for Credit Information) client ID",
          "readOnly" : true
        },
        "teledataID" : {
          "type" : "string",
          "description" : "Client identification in the case of Teledata",
          "readOnly" : true
        },
        "domiciliaryCompany" : {
          "type" : "boolean",
          "description" : "Flag showing whether it is a domiciliary company (company that does not do business in the country of domicile)",
          "readOnly" : true
        },
        "numberOfEmployeesAsAt" : {
          "type" : "string",
          "description" : "Number of employees as at date",
          "readOnly" : true
        },
        "numberOfEmployees" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of employees of the company ",
          "readOnly" : true
        },
        "noga" : {
          "type" : "string",
          "description" : "Economic activity / NOGA code ((Nomenclature Generale des Activites economiques: economic activity) according to version 2008",
          "readOnly" : true
        },
        "clientGroupType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client group type code",
          "readOnly" : true
        },
        "clientSegment" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client segment code",
          "readOnly" : true
        },
        "language" : {
          "type" : "string",
          "description" : "ISO_639-1 - Language code of the leading person's mother tongue",
          "readOnly" : true
        },
        "frequencyOfContact" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the client contact frequency",
          "readOnly" : true
        },
        "bulkMailing" : {
          "type" : "boolean",
          "description" : "Flag showing whether bulk mailing is permitted or not",
          "readOnly" : true
        },
        "openingDate" : {
          "type" : "string",
          "description" : "Date of the client relationship opening (yyyy-MM-dd)",
          "readOnly" : true
        },
        "blockingCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Blocking and pledging code",
          "readOnly" : true
        },
        "advisor" : {
          "description" : "Advisors can be provided with their roles when opening clients here. Please note that both fields need to be specified so that the advisor is taken into account accordingly.",
          "readOnly" : true,
          "$ref" : "#/definitions/v2.advisor"
        },
        "partner" : {
          "description" : "partner",
          "readOnly" : true,
          "$ref" : "#/definitions/v2.partner"
        },
        "addresses" : {
          "type" : "array",
          "description" : "addresses",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/v2.address"
          }
        },
        "amlo" : {
          "description" : "amlo",
          "readOnly" : true,
          "$ref" : "#/definitions/v2.amlo"
        },
        "acceptanceRatio" : {
          "description" : "acceptanceRatio",
          "readOnly" : true,
          "$ref" : "#/definitions/v2.acceptanceRatio"
        }
      },
      "description" : "Client data that must be added to Finnova",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.Client"
      }
    },
    "v2.partner" : {
      "type" : "object",
      "required" : [ "lastName", "nationality" ],
      "properties" : {
        "formOfAddress" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Form of address code of the individual client",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name of the partner",
          "readOnly" : true
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name of the partner",
          "readOnly" : true
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of birth (yyyy-MM-dd) of the individual client",
          "readOnly" : true
        },
        "nationality" : {
          "type" : "string",
          "description" : "ISO_3166-1 - country code of the partner's nationality",
          "readOnly" : true
        },
        "nationality2" : {
          "type" : "string",
          "description" : "ISO_3166-1 - country code of the second nationality if the partner has dual nationality",
          "readOnly" : true
        },
        "title" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the partner's academic title",
          "readOnly" : true
        },
        "maritalStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the partner's marital status",
          "readOnly" : true
        }
      }
    },
    "v2.clientResponse" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "description" : "Technical sequence number of the entered client",
          "readOnly" : true
        },
        "counterpartyCategory" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Counterparty category code according to CAO",
          "readOnly" : true
        }
      },
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.CreateClientResponse"
      }
    },
    "v2.accountReservationQuery" : {
      "type" : "object",
      "required" : [ "accountType", "currency" ],
      "properties" : {
        "accountType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Account type code",
          "readOnly" : true
        },
        "currency" : {
          "type" : "string",
          "description" : "ISO_4217 - Currency code",
          "readOnly" : true
        }
      },
      "description" : "Required account opening data.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.AccountOpeningData"
      }
    },
    "v2.accountReservationResponse" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "number",
          "description" : "Reserved technical account sequence number",
          "readOnly" : true
        },
        "number" : {
          "type" : "number",
          "description" : "Reserved account number",
          "readOnly" : true
        },
        "externalNumber" : {
          "type" : "string",
          "description" : "External representation of the reserved account number",
          "readOnly" : true
        }
      },
      "description" : "Reserves a new account number in Finnova without opening an account.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.AccountIdentification"
      }
    },
    "v2.account" : {
      "type" : "object",
      "required" : [ "category", "currency", "type" ],
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Account type code",
          "readOnly" : true
        },
        "externalNumber" : {
          "type" : "string",
          "description" : "Internal Finnova representation of the externally recognised account number",
          "readOnly" : true
        },
        "portfolioNumber" : {
          "type" : "string",
          "description" : "Portfolio (techn. sequence number) allocated to the account. If nothing is delivered, the default portfolio '00' is used.",
          "readOnly" : true
        },
        "category" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Account category for the designation of the account which appears on the statements",
          "readOnly" : true
        },
        "currency" : {
          "type" : "string",
          "description" : "ISO_4217 - Account currency code (or valuation currency in the case of a custody account)",
          "readOnly" : true
        }
      },
      "description" : "Personal data and account data regarding the identified client in the resource.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.StoreAccountRequestBody"
      }
    },
    "v2.accountResponseSuccess" : {
      "type" : "object",
      "required" : [ "category", "key" ],
      "properties" : {
        "key" : {
          "type" : "integer",
          "description" : "Technical sequence number of account",
          "readOnly" : true
        },
        "category" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Category for the designation of the account if no free text is used",
          "readOnly" : true
        }
      },
      "description" : "Create account response",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.StoreAccountResponse"
      }
    },
    "v2.Card" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code to the card type (debit)",
          "readOnly" : true
        },
        "authorisedPerson" : {
          "type" : "string",
          "description" : "Technical client sequence number of the authorised person who can have use of the card",
          "readOnly" : true
        }
      },
      "description" : "Adds a new card for a new client.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.Card"
      }
    },
    "v2.CardResponse" : {
      "type" : "object",
      "required" : [ "key", "number" ],
      "properties" : {
        "key" : {
          "type" : "integer",
          "description" : "Technical card sequence number of the ordered card",
          "readOnly" : true
        },
        "number" : {
          "type" : "integer",
          "description" : "Card number of the ordered card",
          "readOnly" : true
        }
      },
      "description" : "Create card response",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.CardResponseSuccess"
      }
    },
    "v2.amloDecisionResponse" : {
      "type" : "object",
      "properties" : {
        "pepSystem" : {
          "type" : "string",
          "description" : "Automatically generated code for politically exposed persons",
          "readOnly" : true
        },
        "pepManual" : {
          "type" : "string",
          "description" : "Manually generated code for politically exposed persons",
          "readOnly" : true
        },
        "pepCheckDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "furtherRisks" : {
          "type" : "boolean",
          "description" : "Code showing whether there are further risk criteria",
          "readOnly" : true
        },
        "riskCategory" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Risk category code / Result of the money laundering check",
          "readOnly" : true
        },
        "decisionAdvisor" : {
          "type" : "boolean",
          "description" : "Advisor's AMLO decision as to whether the relationship is accepted or not",
          "readOnly" : true
        },
        "advisor" : {
          "type" : "string",
          "description" : "User ID of the employee who made the AMLO decision",
          "readOnly" : true
        },
        "decisionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of AMLO decision",
          "readOnly" : true
        }
      },
      "description" : "Delivers the Anti Money Laundering Office (AMLO) information for a particular client.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.AmloInformation"
      }
    },
    "v2.cdbRequest" : {
      "type" : "object",
      "properties" : {
        "clientKeyRelationship" : {
          "type" : "integer",
          "description" : "Technical client sequence number of the client under which the relevant CDB check took place.",
          "readOnly" : true
        },
        "clientRole" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Role of the client under the CDB client relationship",
          "readOnly" : true
        },
        "checkType" : {
          "type" : "string",
          "description" : "Check type code of the client",
          "readOnly" : true
        },
        "clientDocumentType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the client document type",
          "readOnly" : true
        },
        "identificationNumber" : {
          "type" : "string",
          "description" : "ID number of the document selected under IDDOC_CD",
          "readOnly" : true
        },
        "idDateOfIssue" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of issue (yyyy-MM-dd) of the ID document",
          "readOnly" : true
        },
        "idValidUntil" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "ID document 'valid until' date (yyyy-MM-dd)",
          "readOnly" : true
        },
        "idCountryOfIssue" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "ISO_3166-1 - country code of the ID country of issue",
          "readOnly" : true
        },
        "documentPlaceOfIssue" : {
          "type" : "string",
          "description" : "Place of issue of the ID",
          "readOnly" : true
        },
        "identityCheck" : {
          "type" : "boolean",
          "description" : "Flag whether or not the identity check is ok",
          "readOnly" : true
        },
        "checker" : {
          "type" : "string",
          "description" : "User ID of the Finnova user / employee who performed the check",
          "readOnly" : true
        },
        "checkDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Check date (yyyy-MM-dd)",
          "readOnly" : true
        }
      },
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.CreateCdbData"
      }
    },
    "v2.cdbResponse" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "CDB status",
          "readOnly" : true
        }
      },
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.CreateCdbResponse"
      }
    },
    "v2.telebankingRole" : {
      "type" : "object",
      "properties" : {
        "role" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Role code for telebanking contract",
          "readOnly" : true
        }
      },
      "description" : "Role code for telebanking contract"
    },
    "v2.contract" : {
      "type" : "object",
      "required" : [ "status", "type" ],
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of contract type",
          "readOnly" : true
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Status code of the contract",
          "readOnly" : true
        },
        "validFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Contract 'valid from' date. Mandatory field with status 'Valid'",
          "readOnly" : true
        },
        "validUntil" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Contract 'valid until' date (yyyy-MM-dd) (inclusive)",
          "readOnly" : true
        },
        "printingDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Printing time stamp (yyyy-MM-dd HH:mm:ss) of this contract",
          "readOnly" : true
        },
        "approvalDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date (yyyy-MM-dd) on which bank authorities acknowledged or approved the contract",
          "readOnly" : true
        },
        "signatureDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date (yyyy-MM-dd) of the contract signature according to 'Place and date'",
          "readOnly" : true
        },
        "portfolioAllocated" : {
          "type" : "integer",
          "description" : "Technical portfolio number which is required if the contract refers to this portfolio",
          "readOnly" : true
        },
        "accountAllocated" : {
          "type" : "integer",
          "description" : "Technical account sequence number which is required if the contract refers to this account",
          "readOnly" : true
        },
        "comment" : {
          "type" : "string",
          "description" : "Free text entry of comments for this contract",
          "readOnly" : true
        },
        "terminationRule" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Rule code of the contract termination",
          "readOnly" : true
        },
        "storageLocation" : {
          "type" : "string",
          "description" : "Code of the document storage location",
          "readOnly" : true
        },
        "deliveryTypeEbanking" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Accounts of a contract opened in the future receive electronic documents via internet banking by default, 4 = yes, otherwise no",
          "readOnly" : true
        },
        "docKey" : {
          "type" : "integer",
          "description" : "Technical document number of expected return documents or document numbers released for that",
          "readOnly" : true
        },
        "rolesTelebanking" : {
          "type" : "array",
          "description" : "Telebanking roles",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/v2.telebankingRole"
          }
        },
        "allocationAccounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/v2.contractAllocationAccount"
          }
        },
        "allocationClients" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/v2.contractAllocationClient"
          }
        }
      },
      "description" : "Client contract request",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.ContractRequest"
      }
    },
    "v2.contractAllocationClient" : {
      "type" : "object",
      "required" : [ "clientKey" ],
      "properties" : {
        "clientKey" : {
          "type" : "integer",
          "description" : "Technical client sequence number",
          "readOnly" : true
        },
        "portfolioKey" : {
          "type" : "integer",
          "description" : "Technical portfolio sequence number, ",
          "readOnly" : true
        },
        "autoActivation" : {
          "type" : "boolean",
          "description" : "Flag whether newly opened accounts should be allocated automatically (true/false)",
          "readOnly" : true
        }
      },
      "description" : "Contract allocation client"
    },
    "v2.contractAllocationAccount" : {
      "type" : "object",
      "required" : [ "accountHolderKey", "accountKey" ],
      "properties" : {
        "accountHolderKey" : {
          "type" : "integer",
          "description" : "Technical client number",
          "readOnly" : true
        },
        "portfolioKey" : {
          "type" : "integer",
          "description" : "Technical portfolio number",
          "readOnly" : true
        },
        "accountKey" : {
          "type" : "integer",
          "description" : "Technical account sequence number. For telebanking contractswith this loaded KT_LNR, the competence code applies exactly for this account. This competence overrides a general competence assignment at client level for this account.",
          "readOnly" : true
        },
        "authorisationType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Authorisation type of allocated accounts which sets the defined control code values accordingly",
          "readOnly" : true
        },
        "dailyLimitAuthorisation1" : {
          "type" : "integer",
          "description" : "Daily limit for 1 authorisation",
          "readOnly" : true
        },
        "dailyLimitAuthorisation2" : {
          "type" : "integer",
          "description" : "Daily limit for 2 authorisations",
          "readOnly" : true
        },
        "dailyLimitAbsolute" : {
          "type" : "integer",
          "description" : "Absolute daily limit",
          "readOnly" : true
        },
        "monthlyLimitAuthorisation1" : {
          "type" : "integer",
          "description" : "Monthly limit for 1 authorisation",
          "readOnly" : true
        },
        "monthlyLimitAuthorisation2" : {
          "type" : "integer",
          "description" : "Monthly limit for 2 authorisations",
          "readOnly" : true
        },
        "monthlyLimitAbsolute" : {
          "type" : "integer",
          "description" : "Absolute monthly limit",
          "readOnly" : true
        }
      },
      "description" : "Contract allocation account"
    },
    "v2.contractResponseSuccess" : {
      "type" : "object",
      "required" : [ "contractId", "key" ],
      "properties" : {
        "key" : {
          "type" : "integer",
          "description" : "Technical sequence number of contract",
          "readOnly" : true
        },
        "contractId" : {
          "type" : "string",
          "description" : "Bank-internal contract ID of the entered contract",
          "readOnly" : true
        }
      },
      "description" : "Client contract response",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.ContractResponse"
      }
    },
    "v2.amount" : {
      "type" : "object",
      "required" : [ "currency", "value" ],
      "properties" : {
        "value" : {
          "type" : "number",
          "description" : "Note amount",
          "readOnly" : true
        },
        "currency" : {
          "type" : "string",
          "description" : "ISO_4217 - Currency code for the note amount",
          "readOnly" : true
        }
      },
      "description" : "Note amount and currency"
    },
    "v2.note" : {
      "type" : "object",
      "properties" : {
        "contactOf" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time (yyyy-MM-dd HH:mm:ss) of the note creation",
          "readOnly" : true
        },
        "noteType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client note type code",
          "readOnly" : true
        },
        "contactType" : {
          "type" : "string",
          "description" : "Code of the client contact type",
          "readOnly" : true
        },
        "noteCode" : {
          "type" : "string",
          "description" : "Client note code",
          "readOnly" : true
        },
        "employee" : {
          "type" : "string",
          "description" : "User ID of the employee who had contact with the client and who entered this note",
          "readOnly" : true
        },
        "initiative" : {
          "type" : "string",
          "description" : "Code showing whether contact was made on the advisor’s initiative (bank) or the client's initiative",
          "readOnly" : true
        },
        "quality" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Quality code of the note",
          "readOnly" : true
        },
        "amount" : {
          "description" : "Note amount and currency",
          "readOnly" : true,
          "$ref" : "#/definitions/v2.amount"
        },
        "property" : {
          "type" : "string",
          "description" : "Note property free text",
          "readOnly" : true
        },
        "comment" : {
          "type" : "string",
          "description" : "Comment on this note regarding this contact",
          "readOnly" : true
        }
      },
      "description" : "Note data that needs to be entered for the selected client.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.ClientNoteRequest"
      }
    },
    "v2.noteResponse" : {
      "type" : "object",
      "required" : [ "clientKey", "noteKey" ],
      "properties" : {
        "clientKey" : {
          "type" : "integer",
          "description" : "Technical client sequence number",
          "readOnly" : true
        },
        "noteKey" : {
          "type" : "integer",
          "description" : "Technical sequence number of the created note",
          "readOnly" : true
        }
      },
      "description" : "Note successfully created",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.ClientNoteResponse"
      }
    },
    "v2.pendingTask" : {
      "type" : "object",
      "properties" : {
        "deadline" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Deadline of pending task (yyyy-MM-dd). May be mandatory, depending on pending task type. Acceted formats are date (yyyy-MM-dd) or date and time (yyyy-MM-dd HH:mm:ss)",
          "readOnly" : true
        },
        "contactType" : {
          "type" : "string",
          "description" : "Client contact type",
          "readOnly" : true
        },
        "pendingTaskType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client pending task type code",
          "readOnly" : true
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Status of the pending task",
          "readOnly" : true
        },
        "completedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time (yyyy-MM-dd HH:mm:ss) of completion. Only provide if status is 'closed'",
          "readOnly" : true
        },
        "display" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Display code of the client pending task. Depending on the pending taskk type, restriction is possible or not possible.",
          "readOnly" : true
        },
        "employee" : {
          "type" : "string",
          "description" : "User ID of the employee who is responsible for the pending task",
          "readOnly" : true
        },
        "amount" : {
          "description" : "Pending task amount and currency",
          "readOnly" : true,
          "$ref" : "#/definitions/v2.PendingTaskAmount"
        },
        "orderKey" : {
          "type" : "integer",
          "description" : "Technical sequence number of the original order this pending task refers to",
          "readOnly" : true
        },
        "comment" : {
          "type" : "string",
          "description" : "Comment regarding this client pending task. Depending on the type of pending task, loaded obligatorily or optionally.",
          "readOnly" : true
        }
      },
      "description" : "Pending task data that needs to be entered for the selected client",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.PendingTaskRequestBody"
      }
    },
    "v2.PendingTaskAmount" : {
      "type" : "object",
      "required" : [ "currency", "value" ],
      "properties" : {
        "value" : {
          "type" : "number",
          "description" : "Pending task amount",
          "readOnly" : true
        },
        "currency" : {
          "type" : "string",
          "description" : "ISO_4217 - Currency code for the pending task amount",
          "readOnly" : true
        }
      },
      "description" : "Pending task amount and currency"
    },
    "v2.PendingTaskResponse" : {
      "type" : "object",
      "required" : [ "clientKey", "pendingTaskKey" ],
      "properties" : {
        "clientKey" : {
          "type" : "integer",
          "description" : "Technical client sequence number",
          "readOnly" : true
        },
        "pendingTaskKey" : {
          "type" : "integer",
          "description" : "Technical pending task sequence number",
          "readOnly" : true
        }
      },
      "description" : "Pending tasks response",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.PendingTaskResponse"
      }
    },
    "v2.powerOfAttorneySignBase" : {
      "type" : "object",
      "required" : [ "legitimation", "status" ],
      "properties" : {
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the Signbase power of attorney status",
          "readOnly" : true
        },
        "legitimation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the legitimation for the power of attorney",
          "readOnly" : true
        },
        "signatureOrigin" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the signature origin",
          "readOnly" : true
        }
      },
      "description" : "Power of attorney sign base"
    },
    "v2.powerOfAttorney" : {
      "type" : "object",
      "required" : [ "status", "type" ],
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of contract type",
          "readOnly" : true
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Status code of the contract",
          "readOnly" : true
        },
        "validFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Contract 'valid from' date. Mandatory field with status 'Valid'",
          "readOnly" : true
        },
        "validUntil" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Contract 'valid until' date (yyyy-MM-dd) (inclusive)",
          "readOnly" : true
        },
        "printingDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Printing time stamp (yyyy-MM-dd HH:mm:ss) of this contract",
          "readOnly" : true
        },
        "approvalDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date on which bank authorities acknowledged or approved the contract",
          "readOnly" : true
        },
        "signatureDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date (yyyy-MM-dd) of the contract signature according to 'Place and date'",
          "readOnly" : true
        },
        "portfolioAllocated" : {
          "type" : "string",
          "description" : "Technical portfolio sequence number of the resource client which is required if the power of attorney refers to this portfolio. If nothing is delivered, the default portfolio '00' is used.",
          "readOnly" : true
        },
        "accountAllocated" : {
          "type" : "string",
          "description" : "Technical account sequence number of the resource client which is required if the power of attorney refers to this account",
          "readOnly" : true
        },
        "comment" : {
          "type" : "string",
          "description" : "Free text entry of comments for this contract",
          "readOnly" : true
        },
        "terminationRule" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Rule code of the contract termination",
          "readOnly" : true
        },
        "storageLocation" : {
          "type" : "string",
          "description" : "Code of the document storage location",
          "readOnly" : true
        },
        "allocationClient" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/v2.powerOfAttorneyAllocationClient"
          }
        }
      },
      "description" : "Power of attorney agreement request",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.CreatePowerOfAttorneyRequest"
      }
    },
    "v2.powerOfAttorneyAllocationClient" : {
      "type" : "object",
      "required" : [ "client", "signingAuthority" ],
      "properties" : {
        "client" : {
          "type" : "integer",
          "description" : "Technical client sequence number",
          "readOnly" : true
        },
        "signingAuthority" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the signing authority of the allocated client",
          "readOnly" : true
        },
        "signBase" : {
          "description" : "Power of attorney sign base",
          "readOnly" : true,
          "$ref" : "#/definitions/v2.powerOfAttorneySignBase"
        }
      },
      "description" : "Power of attorney allocation client"
    },
    "v2.powerOfAttorneyResponseSuccess" : {
      "type" : "object",
      "required" : [ "contractId", "contractKey" ],
      "properties" : {
        "contractKey" : {
          "type" : "integer",
          "description" : "Technical contract sequence number",
          "readOnly" : true
        },
        "contractId" : {
          "type" : "string",
          "description" : "Bank-internal contract ID of the entered contract",
          "readOnly" : true
        }
      },
      "description" : "Power of attorney agreement successfully created and allocated.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.CreatePowerOfAttorneyResponse"
      }
    },
    "v2.ClientRelationshipRequest" : {
      "type" : "object",
      "required" : [ "number", "relationshipClientKey" ],
      "properties" : {
        "relationshipClientKey" : {
          "type" : "integer",
          "description" : "Technical sequence number of the client with a relationship to the client in the URI",
          "readOnly" : true
        },
        "number" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Code of the relationship number",
          "readOnly" : true
        },
        "since" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date since which this relationship exists",
          "readOnly" : true
        },
        "until" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date until which this relationship existed (Used for EU interest taxation)",
          "readOnly" : true
        },
        "perCapitaAllocation" : {
          "type" : "boolean",
          "description" : "Per-capita allocation",
          "readOnly" : true
        },
        "participationRate" : {
          "type" : "number",
          "description" : "Participation rate of participants",
          "readOnly" : true
        },
        "comments" : {
          "type" : "string",
          "description" : "Comments regarding this relationship",
          "readOnly" : true
        }
      },
      "description" : "Defines the relationship between the clients.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.ClientRelationshipRequest"
      }
    },
    "v2.relationshipResponseSuccess" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "integer",
          "description" : "Technical sequence number of relationship",
          "readOnly" : true
        }
      },
      "description" : "Client relationship successfully created.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.CreateRelationshipResponse"
      }
    },
    "CodeTablesResponse" : {
      "type" : "object",
      "properties" : {
        "codes" : {
          "type" : "array",
          "description" : "List of all code tables for the given tenant",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/CodeTableDescription"
          }
        },
        "_links" : {
          "description" : "HAL _links",
          "readOnly" : true,
          "$ref" : "#/definitions/Curies"
        }
      },
      "description" : "Response object for a code tables request",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.codeTableAccessHal.v1.CodeTablesResponse"
      }
    },
    "CodeTableDescription" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Identification",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the code table",
          "readOnly" : true
        },
        "code:items" : {
          "description" : "Code table items",
          "$ref" : "#/definitions/Link"
        }
      },
      "description" : "/banks/{number}/codes"
    },
    "Curie" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "curie name",
          "readOnly" : true
        },
        "href" : {
          "type" : "string",
          "description" : "href path of the resource",
          "readOnly" : true
        },
        "templated" : {
          "type" : "boolean",
          "description" : "if true then use {rel} place holder in href (default is true)",
          "readOnly" : true
        }
      },
      "description" : "HAL curie"
    },
    "Curies" : {
      "type" : "object",
      "properties" : {
        "curies" : {
          "type" : "array",
          "description" : "HAL curies",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Curie"
          }
        }
      },
      "description" : "HAL curies"
    },
    "Link" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string",
          "description" : "Link to the code table entry/item",
          "readOnly" : true
        }
      }
    },
    "Item" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Identification of the item/code table entry",
          "readOnly" : true
        },
        "language" : {
          "type" : "string",
          "description" : "Language of the shortcut and the description (ISO-639-1)",
          "readOnly" : true
        },
        "shortcut" : {
          "type" : "string",
          "description" : "Shortcut of the item/code table entry",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the item/code table entry",
          "readOnly" : true
        }
      },
      "description" : "Code table item, an entry of a code table"
    },
    "CodeTableResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Identification of the code table",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "description" : "Textual description of the code table",
          "readOnly" : true
        },
        "items" : {
          "type" : "array",
          "description" : "The code table items/entries",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Item"
          }
        }
      },
      "description" : "Response object for a code table request",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.codeTableAccessHal.v1.CodeTableResponse"
      }
    },
    "v2.possibleDuplicates" : {
      "type" : "object",
      "properties" : {
        "number" : {
          "type" : "string",
          "description" : "clientNumber",
          "readOnly" : true
        },
        "externalNumber" : {
          "type" : "string",
          "description" : "Client number for external representation",
          "readOnly" : true
        },
        "key" : {
          "type" : "integer",
          "description" : "Technical client sequence number",
          "readOnly" : true
        },
        "clientStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Client status code. This status helps to distinguish inactive clients from active clients",
          "readOnly" : true
        },
        "closureDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Removal date of client relationship",
          "readOnly" : true
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name of the leading person",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name of leading person or company name",
          "readOnly" : true
        },
        "clientHeaderRow2" : {
          "type" : "string",
          "description" : "Client header row",
          "readOnly" : true
        },
        "clientHeaderRow3" : {
          "type" : "string",
          "description" : "Client header row",
          "readOnly" : true
        },
        "postCode" : {
          "type" : "number",
          "description" : "Postcode",
          "readOnly" : true
        },
        "place" : {
          "type" : "string",
          "description" : "Designation of the place (excl. country and postcode)",
          "readOnly" : true
        },
        "canton" : {
          "type" : "string",
          "description" : "Canton",
          "readOnly" : true
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of birth of the individual client or foundation date of a legal entity",
          "readOnly" : true
        },
        "clientIdentified" : {
          "type" : "boolean",
          "description" : "Code for whether a CDB check has been carried out (true) or not (false)",
          "readOnly" : true
        }
      },
      "description" : "Provides all information about a possible duplicate.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.Duplicate"
      }
    },
    "v2.amloRiskCategory" : {
      "type" : "object",
      "properties" : {
        "amloRiskCategory" : {
          "type" : "string",
          "description" : "Risk category code / Result of the money laundering check",
          "readOnly" : true
        }
      },
      "description" : "Returns the risk category based on the delivered input attributes.",
      "x-className" : {
        "type" : "string",
        "format" : "integrationService.clientonboarding.v2.AmloDecisionResponse"
      }
    }
  }
}